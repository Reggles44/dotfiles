[4mTMUX[24m(1)                                                                                                   General Commands Manual                                                                                                 [4mTMUX[24m(1)

[1mNAME[0m
       tmux ‚Äî terminal multiplexer

[1mSYNOPSIS[0m
       [1mtmux [22m[[1m-2CDlNuVv[22m] [[1m-c [4m[22mshell-command[24m] [[1m-f [4m[22mfile[24m] [[1m-L [4m[22msocket-name[24m] [[1m-S [4m[22msocket-path[24m] [[1m-T [4m[22mfeatures[24m] [[4mcommand[24m [[4mflags[24m]]

[1mDESCRIPTION[0m
       [1mtmux [22mis a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen.  [1mtmux [22mmay be detached from a screen and continue running in the background, then later reattached.

       When [1mtmux [22mis started, it creates a new [4msession[24m with a single [4mwindow[24m and displays it on screen.  A status line at the bottom of the screen shows information on the current session and is used to enter interactive commands.

       A session is a single collection of [4mpseudo[24m [4mterminals[24m under the management of [1mtmux[22m.  Each session has one or more windows linked to it.  A window occupies the entire screen and may be split into rectangular panes, each of which
       is  a  separate  pseudo terminal (the [4mpty[24m(4) manual page documents the technical details of pseudo terminals).  Any number of [1mtmux [22minstances may connect to the same session, and any number of windows may be present in the same
       session.  Once all sessions are killed, [1mtmux [22mexits.

       Each session is persistent and will survive accidental disconnection (such as [4mssh[24m(1) connection timeout) or intentional detaching (with the ‚ÄòC-b d‚Äô key strokes).  [1mtmux [22mmay be reattached using:

             [1m$ tmux attach[0m

       In [1mtmux[22m, a session is displayed on screen by a [4mclient[24m and all sessions are managed by a single [4mserver[24m.  The server and each client are separate processes which communicate through a socket in [4m/tmp[24m.

       The options are as follows:

       [1m-2            [22mForce [1mtmux [22mto assume the terminal supports 256 colours.  This is equivalent to [1m-T [4m[22m256[24m.

       [1m-C            [22mStart in control mode (see the ‚ÄúCONTROL MODE‚Äù section).  Given twice ([1m-CC[22m) disables echo.

       [1m-c [4m[22mshell-command[0m
                     Execute [4mshell-command[24m using the default shell.  If necessary, the [1mtmux [22mserver will be started to retrieve the [1mdefault-shell [22moption.  This option is for compatibility with [4msh[24m(1) when [1mtmux [22mis used as a login shell.

       [1m-D            [22mDo not start the [1mtmux [22mserver as a daemon.  This also turns the [1mexit-empty [22moption off.  With [1m-D[22m, [4mcommand[24m may not be specified.

       [1m-f [4m[22mfile[24m       Specify  an  alternative  configuration  file.   By  default,  [1mtmux  [22mloads  the  system  configuration  file  from  [4m/etc/tmux.conf[24m,  if  present,  then  looks  for  a  user  configuration  file  at  [4m~/.tmux.conf,[0m
                     [4m$XDG_CONFIG_HOME/tmux/tmux.conf[24m or [4m~/.tmux.conf[24m.

                     The configuration file is a set of [1mtmux [22mcommands which are executed in sequence when the server is first started.  [1mtmux [22mloads configuration files once when the server process has started.  The [1msource-file [22mcommand
                     may be used to load a file later.

                     [1mtmux [22mshows any error messages from commands in configuration files in the first session created, and continues to process the rest of the configuration file.

       [1m-L [4m[22msocket-name[0m
                     [1mtmux  [22mstores the server socket in a directory under TMUX_TMPDIR or [4m/tmp[24m if it is unset.  The default socket is named [4mdefault[24m.  This option allows a different socket name to be specified, allowing several indepen‚Äê
                     dent [1mtmux [22mservers to be run.  Unlike [1m-S [22ma full path is not necessary: the sockets are all created in a directory [4mtmux-UID[24m under the directory given by TMUX_TMPDIR or in [4m/tmp[24m.  The [4mtmux-UID[24m directory is created by
                     [1mtmux [22mand must not be world readable, writable or executable.

                     If the socket is accidentally removed, the SIGUSR1 signal may be sent to the [1mtmux [22mserver process to recreate it (note that this will fail if any parent directories are missing).

       [1m-l            [22mBehave as a login shell.  This flag currently has no effect and is for compatibility with other shells when using tmux as a login shell.

       [1m-N            [22mDo not start the server even if the command would normally do so (for example [1mnew-session [22mor [1mstart-server[22m).

       [1m-S [4m[22msocket-path[0m
                     Specify a full alternative path to the server socket.  If [1m-S [22mis specified, the default socket directory is not used and any [1m-L [22mflag is ignored.

       [1m-T [4m[22mfeatures[24m   Set terminal features for the client.  This is a comma-separated list of features.  See the [1mterminal-features [22moption.

       [1m-u            [22mWrite UTF-8 output to the terminal even if the first environment variable of LC_ALL, LC_CTYPE, or LANG that is set does not contain "UTF-8" or "UTF8".

       [1m-V            [22mReport the [1mtmux [22mversion.

       [1m-v            [22mRequest verbose logging.  Log messages will be saved into [4mtmux-client-PID.log[24m and [4mtmux-server-PID.log[24m files in the current directory, where [4mPID[24m is the PID of the server or client  process.   If  [1m-v  [22mis  specified
                     twice, an additional [4mtmux-out-PID.log[24m file is generated with a copy of everything [1mtmux [22mwrites to the terminal.

                     The SIGUSR2 signal may be sent to the [1mtmux [22mserver process to toggle logging between on (as if [1m-v [22mwas given) and off.

       [4mcommand[24m [[4mflags[24m]
                     This specifies one of a set of commands used to control [1mtmux[22m, as described in the following sections.  If no commands are specified, the [1mnew-session [22mcommand is assumed.

[1mDEFAULT KEY BINDINGS[0m
       [1mtmux [22mmay be controlled from an attached client by using a key combination of a prefix key, ‚ÄòC-b‚Äô (Ctrl-b) by default, followed by a command key.

       The default command key bindings are:

             C-b         Send the prefix key (C-b) through to the application.
             C-o         Rotate the panes in the current window forwards.
             C-z         Suspend the [1mtmux [22mclient.
             !           Break the current pane out of the window.
             "           Split the current pane into two, top and bottom.
             #           List all paste buffers.
             $           Rename the current session.
             %           Split the current pane into two, left and right.
             &           Kill the current window.
             '           Prompt for a window index to select.
             (           Switch the attached client to the previous session.
             )           Switch the attached client to the next session.
             ,           Rename the current window.
             -           Delete the most recently copied buffer of text.
             .           Prompt for an index to move the current window.
             0 to 9      Select windows 0 to 9.
             :           Enter the [1mtmux [22mcommand prompt.
             ;           Move to the previously active pane.
             =           Choose which buffer to paste interactively from a list.
             ?           List all key bindings.
             D           Choose a client to detach.
             L           Switch the attached client back to the last session.
             [           Enter copy mode to copy text or view the history.
             ]           Paste the most recently copied buffer of text.
             c           Create a new window.
             d           Detach the current client.
             f           Prompt to search for text in open windows.
             i           Display some information about the current window.
             l           Move to the previously selected window.
             m           Mark the current pane (see [1mselect-pane -m[22m).
             M           Clear the marked pane.
             n           Change to the next window.
             o           Select the next pane in the current window.
             p           Change to the previous window.
             q           Briefly display pane indexes.
             r           Force redraw of the attached client.
             s           Select a new session for the attached client interactively.
             t           Show the time.
             w           Choose the current window interactively.
             x           Kill the current pane.
             z           Toggle zoom state of the current pane.
             {           Swap the current pane with the previous pane.
             }           Swap the current pane with the next pane.
             ~           Show previous messages from [1mtmux[22m, if any.
             Page Up     Enter copy mode and scroll one page up.
             Up, Down
             Left, Right
                         Change to the pane above, below, to the left, or to the right of the current pane.
             M-1 to M-5  Arrange panes in one of the five preset layouts: even-horizontal, even-vertical, main-horizontal, main-vertical, or tiled.
             Space       Arrange the current window in the next preset layout.
             M-n         Move to the next window with a bell or activity marker.
             M-o         Rotate the panes in the current window backwards.
             M-p         Move to the previous window with a bell or activity marker.
             C-Up, C-Down
             C-Left, C-Right
                         Resize the current pane in steps of one cell.
             M-Up, M-Down
             M-Left, M-Right
                         Resize the current pane in steps of five cells.

       Key bindings may be changed with the [1mbind-key [22mand [1munbind-key [22mcommands.

[1mCOMMAND PARSING AND EXECUTION[0m
       [1mtmux [22msupports a large number of commands which can be used to control its behaviour.  Each command is named and can accept zero or more flags and arguments.  They may be bound to a key with the [1mbind-key [22mcommand or run from the
       shell prompt, a shell script, a configuration file or the command prompt.  For example, the same [1mset-option [22mcommand run from the shell prompt, from [4m~/.tmux.conf[24m and bound to a key may look like:

             $ tmux set-option -g status-style bg=cyan

             set-option -g status-style bg=cyan

             bind-key C set-option -g status-style bg=cyan

       Here, the command name is ‚Äòset-option‚Äô, ‚Äò[1m-g[22m‚Äô is a flag and ‚Äòstatus-style‚Äô and ‚Äòbg=cyan‚Äô are arguments.

       [1mtmux  [22mdistinguishes  between  command  parsing  and  execution.  In order to execute a command, [1mtmux [22mneeds it to be split up into its name and arguments.  This is command parsing.  If a command is run from the shell, the shell
       parses it; from inside [1mtmux [22mor from a configuration file, [1mtmux [22mdoes.  Examples of when [1mtmux [22mparses commands are:

             [1m-   [22min a configuration file;

             [1m-   [22mtyped at the command prompt (see [1mcommand-prompt[22m);

             [1m-   [22mgiven to [1mbind-key[22m;

             [1m-   [22mpassed as arguments to [1mif-shell [22mor [1mconfirm-before[22m.

       To execute commands, each client has a ‚Äòcommand queue‚Äô.  A global command queue not attached to any client is used on startup for configuration files like [4m~/.tmux.conf[24m.  Parsed commands added to the queue are executed  in  or‚Äê
       der.   Some commands, like [1mif-shell [22mand [1mconfirm-before[22m, parse their argument to create a new command which is inserted immediately after themselves.  This means that arguments can be parsed twice or more - once when the parent
       command (such as [1mif-shell[22m) is parsed and again when it parses and executes its command.  Commands like [1mif-shell[22m, [1mrun-shell [22mand [1mdisplay-panes [22mstop execution of subsequent commands on the queue until something happens - [1mif-shell[0m
       and [1mrun-shell [22muntil a shell command finishes and [1mdisplay-panes [22muntil a key is pressed.  For example, the following commands:

             new-session; new-window
             if-shell "true" "split-window"
             kill-session

       Will execute [1mnew-session[22m, [1mnew-window[22m, [1mif-shell[22m, the shell command [4mtrue[24m(1), [1msplit-window [22mand [1mkill-session [22min that order.

       The ‚ÄúCOMMANDS‚Äù section lists the [1mtmux [22mcommands and their arguments.

[1mPARSING SYNTAX[0m
       This section describes the syntax of commands parsed by [1mtmux[22m, for example in a configuration file or at the command prompt.  Note that when commands are entered into the shell, they are parsed by the shell -  see  for  example
       [4mksh[24m(1) or [4mcsh[24m(1).

       Each command is terminated by a newline or a semicolon (;).  Commands separated by semicolons together form a ‚Äòcommand sequence‚Äô - if a command in the sequence encounters an error, no subsequent commands are executed.

       It is recommended that a semicolon used as a command separator should be written as an individual token, for example from [4msh[24m(1):

             $ tmux neww \; splitw

       Or:

             $ tmux neww ';' splitw

       Or from the tmux command prompt:

             neww ; splitw

       However, a trailing semicolon is also interpreted as a command separator, for example in these [4msh[24m(1) commands:

             $ tmux neww\; splitw

       Or:

             $ tmux 'neww;' splitw

       As in these examples, when running tmux from the shell extra care must be taken to properly quote semicolons:

             1.   Semicolons  that  should be interpreted as a command separator should be escaped according to the shell conventions.  For [4msh[24m(1) this typically means quoted (such as ‚Äòneww ';' splitw‚Äô) or escaped (such as ‚Äòneww \\\\;
                  splitw‚Äô).

             2.   Individual semicolons or trailing semicolons that should be interpreted as arguments should be escaped twice: once according to the shell conventions and a second time for [1mtmux[22m; for example:

                        $ tmux neww 'foo\\;' bar
                        $ tmux neww foo\\\\; bar

             3.   Semicolons that are not individual tokens or trailing another token should only be escaped once according to shell conventions; for example:

                        $ tmux neww 'foo-;-bar'
                        $ tmux neww foo-\\;-bar

       Comments are marked by the unquoted # character - any remaining text after a comment is ignored until the end of the line.

       If the last character of a line is \, the line is joined with the following line (the \ and the newline are completely removed).  This is called line continuation and applies both inside and outside quoted strings and in  com‚Äê
       ments, but not inside braces.

       Command arguments may be specified as strings surrounded by single (') quotes, double quotes (") or braces ({}).  This is required when the argument contains any special character.  Single and double quoted strings cannot span
       multiple lines except with line continuation.  Braces can span multiple lines.

       Outside of quotes and inside double quotes, these replacements are performed:

             [1m-   [22mEnvironment variables preceded by $ are replaced with their value from the global environment (see the ‚ÄúGLOBAL AND SESSION ENVIRONMENT‚Äù section).

             [1m-   [22mA leading ~ or ~user is expanded to the home directory of the current or specified user.

             [1m-   [22m\uXXXX or \uXXXXXXXX is replaced by the Unicode codepoint corresponding to the given four or eight digit hexadecimal number.

             [1m-   [22mWhen preceded (escaped) by a \, the following characters are replaced: \e by the escape character; \r by a carriage return; \n by a newline; and \t by a tab.

             [1m-   [22m\ooo is replaced by a character of the octal value ooo.  Three octal digits are required, for example \001.  The largest valid character is \377.

             [1m-   [22mAny  other characters preceded by \ are replaced by themselves (that is, the \ is removed) and are not treated as having any special meaning - so for example \; will not mark a command sequence and \$ will not expand
                 an environment variable.

       Braces are parsed as a configuration file (so conditions such as ‚Äò%if‚Äô are processed) and then converted into a string.  They are designed to avoid the need for additional escaping when passing a group of [1mtmux [22mcommands  as  an
       argument (for example to [1mif-shell[22m).  These two examples produce an identical command - note that no escaping is needed when using {}:

             if-shell true {
                 display -p 'brace-dollar-foo: }$foo'
             }

             if-shell true "display -p 'brace-dollar-foo: }\$foo'"

       Braces may be enclosed inside braces, for example:

             bind x if-shell "true" {
                 if-shell "true" {
                     display "true!"
                 }
             }

       Environment variables may be set by using the syntax ‚Äòname=value‚Äô, for example ‚ÄòHOME=/home/user‚Äô.  Variables set during parsing are added to the global environment.  A hidden variable may be set with ‚Äò%hidden‚Äô, for example:

             %hidden MYVAR=42

       Hidden variables are not passed to the environment of processes created by tmux.  See the ‚ÄúGLOBAL AND SESSION ENVIRONMENT‚Äù section.

       Commands  may be parsed conditionally by surrounding them with ‚Äò%if‚Äô, ‚Äò%elif‚Äô, ‚Äò%else‚Äô and ‚Äò%endif‚Äô.  The argument to ‚Äò%if‚Äô and ‚Äò%elif‚Äô is expanded as a format (see ‚ÄúFORMATS‚Äù) and if it evaluates to false (zero or empty), sub‚Äê
       sequent text is ignored until the closing ‚Äò%elif‚Äô, ‚Äò%else‚Äô or ‚Äò%endif‚Äô.  For example:

             %if "#{==:#{host},myhost}"
             set -g status-style bg=red
             %elif "#{==:#{host},myotherhost}"
             set -g status-style bg=green
             %else
             set -g status-style bg=blue
             %endif

       Will change the status line to red if running on ‚Äòmyhost‚Äô, green if running on ‚Äòmyotherhost‚Äô, or blue if running on another host.  Conditionals may be given on one line, for example:

             %if #{==:#{host},myhost} set -g status-style bg=red %endif

[1mCOMMANDS[0m
       This section describes the commands supported by [1mtmux[22m.  Most commands accept the optional [1m-t [22m(and sometimes [1m-s[22m) argument with one of [4mtarget-client[24m, [4mtarget-session[24m, [4mtarget-window[24m, or [4mtarget-pane[24m.  These specify the client, ses‚Äê
       sion, window or pane which a command should affect.

       [4mtarget-client[24m should be the name of the client, typically the [4mpty[24m(4) file to which the client is connected, for example either of [4m/dev/ttyp1[24m or [4mttyp1[24m for the client attached to [4m/dev/ttyp1[24m.  If no client is specified, [1mtmux  [22mat‚Äê
       tempts to work out the client currently in use; if that fails, an error is reported.  Clients may be listed with the [1mlist-clients [22mcommand.

       [4mtarget-session[24m is tried as, in order:

             1.   A session ID prefixed with a $.

             2.   An exact name of a session (as listed by the [1mlist-sessions [22mcommand).

             3.   The start of a session name, for example ‚Äòmysess‚Äô would match a session named ‚Äòmysession‚Äô.

             4.   An [4mfnmatch[24m(3) pattern which is matched against the session name.

       If the session name is prefixed with an ‚Äò=‚Äô, only an exact match is accepted (so ‚Äò=mysess‚Äô will only match exactly ‚Äòmysess‚Äô, not ‚Äòmysession‚Äô).

       If  a single session is found, it is used as the target session; multiple matches produce an error.  If a session is omitted, the current session is used if available; if no current session is available, the most recently used
       is chosen.

       [4mtarget-window[24m (or [4msrc-window[24m or [4mdst-window[24m) specifies a window in the form [4msession[24m:[4mwindow[24m.  [4msession[24m follows the same rules as for [4mtarget-session[24m, and [4mwindow[24m is looked for in order as:

             1.   A special token, listed below.

             2.   A window index, for example ‚Äòmysession:1‚Äô is window 1 in session ‚Äòmysession‚Äô.

             3.   A window ID, such as @1.

             4.   An exact window name, such as ‚Äòmysession:mywindow‚Äô.

             5.   The start of a window name, such as ‚Äòmysession:mywin‚Äô.

             6.   As an [4mfnmatch[24m(3) pattern matched against the window name.

       Like sessions, a ‚Äò=‚Äô prefix will do an exact match only.  An empty window name specifies the next unused index if appropriate (for example the [1mnew-window [22mand [1mlink-window [22mcommands) otherwise the current  window  in  [4msession[24m  is
       chosen.

       The following special tokens are available to indicate particular windows.  Each has a single-character alternative form.

       [1mToken              Meaning[0m
       [1m{start}       [22m^    The lowest-numbered window
       [1m{end}         [22m$    The highest-numbered window
       [1m{last}        [22m!    The last (previously current) window
       [1m{next}        [22m+    The next window by number
       [1m{previous}    [22m-    The previous window by number

       [4mtarget-pane[24m  (or [4msrc-pane[24m or [4mdst-pane[24m) may be a pane ID or takes a similar form to [4mtarget-window[24m but with the optional addition of a period followed by a pane index or pane ID, for example: ‚Äòmysession:mywindow.1‚Äô.  If the pane
       index is omitted, the currently active pane in the specified window is used.  The following special tokens are available for the pane index:

       [1mToken                  Meaning[0m
       [1m{last}            [22m!    The last (previously active) pane
       [1m{next}            [22m+    The next pane by number
       [1m{previous}        [22m-    The previous pane by number
       [1m{top}                  [22mThe top pane
       [1m{bottom}               [22mThe bottom pane
       [1m{left}                 [22mThe leftmost pane
       [1m{right}                [22mThe rightmost pane
       [1m{top-left}             [22mThe top-left pane
       [1m{top-right}            [22mThe top-right pane
       [1m{bottom-left}          [22mThe bottom-left pane
       [1m{bottom-right}         [22mThe bottom-right pane
       [1m{up-of}                [22mThe pane above the active pane
       [1m{down-of}              [22mThe pane below the active pane
       [1m{left-of}              [22mThe pane to the left of the active pane
       [1m{right-of}             [22mThe pane to the right of the active pane

       The tokens ‚Äò+‚Äô and ‚Äò-‚Äô may be followed by an offset, for example:

             select-window -t:+2

       In addition, [4mtarget-session[24m, [4mtarget-window[24m or [4mtarget-pane[24m may consist entirely of the token ‚Äò{mouse}‚Äô (alternative form ‚Äò=‚Äô) to specify the session, window or pane where the most recent mouse event  occurred  (see  the  ‚ÄúMOUSE
       SUPPORT‚Äù section) or ‚Äò{marked}‚Äô (alternative form ‚Äò~‚Äô) to specify the marked pane (see [1mselect-pane -m[22m).

       Sessions,  window  and panes are each numbered with a unique ID; session IDs are prefixed with a ‚Äò$‚Äô, windows with a ‚Äò@‚Äô, and panes with a ‚Äò%‚Äô.  These are unique and are unchanged for the life of the session, window or pane in
       the [1mtmux [22mserver.  The pane ID is passed to the child process of the pane in the TMUX_PANE environment variable.  IDs may be displayed using the ‚Äòsession_id‚Äô, ‚Äòwindow_id‚Äô, or ‚Äòpane_id‚Äô formats (see the  ‚ÄúFORMATS‚Äù  section)  and
       the [1mdisplay-message[22m, [1mlist-sessions[22m, [1mlist-windows [22mor [1mlist-panes [22mcommands.

       [4mshell-command[24m arguments are [4msh[24m(1) commands.  This may be a single argument passed to the shell, for example:

             new-window 'vi ~/.tmux.conf'

       Will run:

             /bin/sh -c 'vi ~/.tmux.conf'

       Additionally, the [1mnew-window[22m, [1mnew-session[22m, [1msplit-window[22m, [1mrespawn-window [22mand [1mrespawn-pane [22mcommands allow [4mshell-command[24m to be given as multiple arguments and executed directly (without ‚Äòsh -c‚Äô).  This can avoid issues with shell
       quoting.  For example:

             $ tmux new-window vi ~/.tmux.conf

       Will run [4mvi[24m(1) directly without invoking the shell.

       [4mcommand[24m [[4margument[24m [4m...[24m] refers to a [1mtmux [22mcommand, either passed with the command and arguments separately, for example:

             bind-key F1 set-option status off

       Or passed as a single string argument in [4m.tmux.conf[24m, for example:

             bind-key F1 { set-option status off }

       Example [1mtmux [22mcommands include:

             refresh-client -t/dev/ttyp2

             rename-session -tfirst newname

             set-option -wt:0 monitor-activity on

             new-window ; split-window -d

             bind-key R source-file ~/.tmux.conf \; \
                     display-message "source-file done"

       Or from [4msh[24m(1):

             $ tmux kill-window -t :1

             $ tmux new-window \; split-window -d

             $ tmux new-session -d 'vi ~/.tmux.conf' \; split-window -d \; attach

[1mCLIENTS AND SESSIONS[0m
       The  [1mtmux [22mserver manages clients, sessions, windows and panes.  Clients are attached to sessions to interact with them, either when they are created with the [1mnew-session [22mcommand, or later with the [1mattach-session [22mcommand.  Each
       session has one or more windows [4mlinked[24m into it.  Windows may be linked to multiple sessions and are made up of one or more panes, each of which contains a pseudo terminal.  Commands for creating, linking and otherwise  manipu‚Äê
       lating windows are covered in the ‚ÄúWINDOWS AND PANES‚Äù section.

       The following commands are available to manage clients and sessions:

       [1mattach-session [22m[[1m-dErx[22m] [[1m-c [4m[22mworking-directory[24m] [[1m-f [4m[22mflags[24m] [[1m-t [4m[22mtarget-session[24m]
                     (alias: [1mattach[22m)
               If run from outside [1mtmux[22m, create a new client in the current terminal and attach it to [4mtarget-session[24m.  If used from inside, switch the current client.  If [1m-d [22mis specified, any other clients attached to the session are
               detached.  If [1m-x [22mis given, send SIGHUP to the parent process of the client as well as detaching the client, typically causing it to exit.  [1m-f [22msets a comma-separated list of client flags.  The flags are:

               active-pane
                       the client has an independent active pane

               ignore-size
                       the client does not affect the size of other clients

               no-output
                       the client does not receive pane output in control mode

               pause-after=seconds
                       output is paused once the pane is [4mseconds[24m behind in control mode

               read-only
                       the client is read-only

               wait-exit
                       wait for an empty line input before exiting in control mode

               A  leading  ‚Äò!‚Äô turns a flag off if the client is already attached.  [1m-r [22mis an alias for [1m-f [4m[22mread-only,ignore-size[24m.  When a client is read-only, only keys bound to the [1mdetach-client [22mor [1mswitch-client [22mcommands have any ef‚Äê
               fect.  A client with the [4mactive-pane[24m flag allows the active pane to be selected independently of the window's active pane used by clients without the flag.  This only affects the cursor  position  and  commands  issued
               from the client; other features such as hooks and styles continue to use the window's active pane.

               If no server is started, [1mattach-session [22mwill attempt to start it; this will fail unless sessions are created in the configuration file.

               The [4mtarget-session[24m rules for [1mattach-session [22mare slightly adjusted: if [1mtmux [22mneeds to select the most recently used session, it will prefer the most recently used [4munattached[24m session.

               [1m-c [22mwill set the session working directory (used for new windows) to [4mworking-directory[24m.

               If [1m-E [22mis used, the [1mupdate-environment [22moption will not be applied.

       [1mdetach-client [22m[[1m-aP[22m] [[1m-E [4m[22mshell-command[24m] [[1m-s [4m[22mtarget-session[24m] [[1m-t [4m[22mtarget-client[24m]
                     (alias: [1mdetach[22m)
               Detach  the current client if bound to a key, the client specified with [1m-t[22m, or all clients currently attached to the session specified by [1m-s[22m.  The [1m-a [22moption kills all but the client given with [1m-t[22m.  If [1m-P [22mis given, send
               SIGHUP to the parent process of the client, typically causing it to exit.  With [1m-E[22m, run [4mshell-command[24m to replace the client.

       [1mhas-session [22m[[1m-t [4m[22mtarget-session[24m]
                     (alias: [1mhas[22m)
               Report an error and exit with 1 if the specified session does not exist.  If it does exist, exit with 0.

       [1mkill-server[0m
               Kill the [1mtmux [22mserver and clients and destroy all sessions.

       [1mkill-session [22m[[1m-aC[22m] [[1m-t [4m[22mtarget-session[24m]
               Destroy the given session, closing any windows linked to it and no other sessions, and detaching all clients attached to it.  If [1m-a [22mis given, all sessions but the specified one is killed.  The  [1m-C  [22mflag  clears  alerts
               (bell, activity, or silence) in all windows linked to the session.

       [1mlist-clients [22m[[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m] [[1m-t [4m[22mtarget-session[24m]
                     (alias: [1mlsc[22m)
               List  all  clients  attached to the server.  [1m-F [22mspecifies the format of each line and [1m-f [22ma filter.  Only clients for which the filter is true are shown.  See the ‚ÄúFORMATS‚Äù section.  If [4mtarget-session[24m is specified, list
               only clients connected to that session.

       [1mlist-commands [22m[[1m-F [4m[22mformat[24m] [[4mcommand[24m]
                     (alias: [1mlscm[22m)
               List the syntax of [4mcommand[24m or - if omitted - of all commands supported by [1mtmux[22m.

       [1mlist-sessions [22m[[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m]
                     (alias: [1mls[22m)
               List all sessions managed by the server.  [1m-F [22mspecifies the format of each line and [1m-f [22ma filter.  Only sessions for which the filter is true are shown.  See the ‚ÄúFORMATS‚Äù section.

       [1mlock-client [22m[[1m-t [4m[22mtarget-client[24m]
                     (alias: [1mlockc[22m)
               Lock [4mtarget-client[24m, see the [1mlock-server [22mcommand.

       [1mlock-session [22m[[1m-t [4m[22mtarget-session[24m]
                     (alias: [1mlocks[22m)
               Lock all clients attached to [4mtarget-session[24m.

       [1mnew-session [22m[[1m-AdDEPX[22m] [[1m-c [4m[22mstart-directory[24m] [[1m-e [4m[22menvironment[24m] [[1m-f [4m[22mflags[24m] [[1m-F [4m[22mformat[24m] [[1m-n [4m[22mwindow-name[24m] [[1m-s [4m[22msession-name[24m] [[1m-t [4m[22mgroup-name[24m] [[1m-x [4m[22mwidth[24m] [[1m-y [4m[22mheight[24m] [[4mshell-command[24m]
                     (alias: [1mnew[22m)
               Create a new session with name [4msession-name[24m.

               The new session is attached to the current terminal unless [1m-d [22mis given.  [4mwindow-name[24m and [4mshell-command[24m are the name of and shell command to execute in the initial window.  With [1m-d[22m,  the  initial  size  comes  from  the
               global  [1mdefault-size  [22moption; [1m-x [22mand [1m-y [22mcan be used to specify a different size.  ‚Äò-‚Äô uses the size of the current client if any.  If [1m-x [22mor [1m-y [22mis given, the [1mdefault-size [22moption is set for the session.  [1m-f [22msets a comma-
               separated list of client flags (see [1mattach-session[22m).

               If run from a terminal, any [4mtermios[24m(4) special characters are saved and used for new windows in the new session.

               The [1m-A [22mflag makes [1mnew-session [22mbehave like [1mattach-session [22mif [4msession-name[24m already exists; if [1m-A [22mis given, [1m-D [22mbehaves like [1m-d [22mto [1mattach-session[22m, and [1m-X [22mbehaves like [1m-x [22mto [1mattach-session[22m.

               If [1m-t [22mis given, it specifies a [1msession group[22m.  Sessions in the same group share the same set of windows - new windows are linked to all sessions in the group and any windows closed removed from all sessions.  The  cur‚Äê
               rent and previous window and any session options remain independent and any session in a group may be killed without affecting the others.  The [4mgroup-name[24m argument may be:

               1.      the name of an existing group, in which case the new session is added to that group;

               2.      the name of an existing session - the new session is added to the same group as that session, creating a new group if necessary;

               3.      the name for a new group containing only the new session.

               [1m-n [22mand [4mshell-command[24m are invalid if [1m-t [22mis used.

               The [1m-P [22moption prints information about the new session after it has been created.  By default, it uses the format ‚Äò#{session_name}:‚Äô but a different format may be specified with [1m-F[22m.

               If [1m-E [22mis used, the [1mupdate-environment [22moption will not be applied.  [1m-e [22mtakes the form ‚ÄòVARIABLE=value‚Äô and sets an environment variable for the newly created session; it may be specified multiple times.

       [1mrefresh-client [22m[[1m-cDLRSU[22m] [[1m-A [4m[22mpane:state[24m] [[1m-B [4m[22mname:what:format[24m] [[1m-C [4m[22msize[24m] [[1m-f [4m[22mflags[24m] [[1m-l [22m[[4mtarget-pane[24m]] [[1m-t [4m[22mtarget-client[24m] [[4madjustment[24m]
                     (alias: [1mrefresh[22m)
               Refresh the current client if bound to a key, or a single client if one is given with [1m-t[22m.  If [1m-S [22mis specified, only update the client's status line.

               The  [1m-U[22m,  [1m-D[22m,  [1m-L -R[22m, and [1m-c [22mflags allow the visible portion of a window which is larger than the client to be changed.  [1m-U [22mmoves the visible part up by [4madjustment[24m rows and [1m-D [22mdown, [1m-L [22mleft by [4madjustment[24m columns and [1m-R[0m
               right.  [1m-c [22mreturns to tracking the cursor automatically.  If [4madjustment[24m is omitted, 1 is used.  Note that the visible position is a property of the client not of the window, changing the current window in the  attached
               session will reset it.

               [1m-C  [22msets  the  width and height of a control mode client or of a window for a control mode client, [4msize[24m must be one of ‚Äòwidthxheight‚Äô or ‚Äòwindow ID:widthxheight‚Äô, for example ‚Äò80x24‚Äô or ‚Äò@0:80x24‚Äô.  [1m-A [22mallows a control
               mode client to trigger actions on a pane.  The argument is a pane ID (with leading ‚Äò%‚Äô), a colon, then one of ‚Äòon‚Äô, ‚Äòoff‚Äô, ‚Äòcontinue‚Äô or ‚Äòpause‚Äô.  If ‚Äòoff‚Äô, [1mtmux [22mwill not send output from the pane to the client and  if
               all  clients  have  turned  the pane off, will stop reading from the pane.  If ‚Äòcontinue‚Äô, [1mtmux [22mwill return to sending output to the pane if it was paused (manually or with the [4mpause-after[24m flag).  If ‚Äòpause‚Äô, [1mtmux [22mwill
               pause the pane.  [1m-A [22mmay be given multiple times for different panes.

               [1m-B [22msets a subscription to a format for a control mode client.  The argument is split into three items by colons: [4mname[24m is a name for the subscription; [4mwhat[24m is a type of item to subscribe to; [4mformat[24m is the format.  After
               a subscription is added, changes to the format are reported with the [1m%subscription-changed [22mnotification, at most once a second.  If only the name is given, the subscription is removed.  [4mwhat[24m may be empty to  check  the
               format only for the attached session, or one of: a pane ID such as ‚Äò%0‚Äô; ‚Äò%*‚Äô for all panes in the attached session; a window ID such as ‚Äò@0‚Äô; or ‚Äò@*‚Äô for all windows in the attached session.

               [1m-f [22msets a comma-separated list of client flags, see [1mattach-session[22m.

               [1m-l [22mrequests the clipboard from the client using the [4mxterm[24m(1) escape sequence.  If [4mtarget-pane[24m is given, the clipboard is sent (in encoded form), otherwise it is stored in a new paste buffer.

               [1m-L[22m, [1m-R[22m, [1m-U [22mand [1m-D [22mmove the visible portion of the window left, right, up or down by [4madjustment[24m, if the window is larger than the client.  [1m-c [22mresets so that the position follows the cursor.  See the [1mwindow-size [22moption.

       [1mrename-session [22m[[1m-t [4m[22mtarget-session[24m] [4mnew-name[0m
                     (alias: [1mrename[22m)
               Rename the session to [4mnew-name[24m.

       [1mserver-access [22m[[1m-adlrw[22m] [[4muser[24m]
               Change the access or read/write permission of [4muser[24m.  The user running the [1mtmux [22mserver (its owner) and the root user cannot be changed and are always permitted access.

               [1m-a [22mand [1m-d [22mare used to give or revoke access for the specified user.  If the user is already attached, the [1m-d [22mflag causes their clients to be detached.

               [1m-r [22mand [1m-w [22mchange the permissions for [4muser[24m: [1m-r [22mmakes their clients read-only and [1m-w [22mwritable.  [1m-l [22mlists current access permissions.

               By  default, the access list is empty and [1mtmux [22mcreates sockets with file system permissions preventing access by any user other than the owner (and root).  These permissions must be changed manually.  Great care should
               be taken not to allow access to untrusted users even read-only.

       [1mshow-messages [22m[[1m-JT[22m] [[1m-t [4m[22mtarget-client[24m]
                     (alias: [1mshowmsgs[22m)
               Show server messages or information.  Messages are stored, up to a maximum of the limit set by the [4mmessage-limit[24m server option.  [1m-J [22mand [1m-T [22mshow debugging information about jobs and terminals.

       [1msource-file [22m[[1m-Fnqv[22m] [[1m-t [4m[22mtarget-pane[24m] [4mpath[24m [4m...[0m
                     (alias: [1msource[22m)
               Execute commands from one or more files specified by [4mpath[24m (which may be [4mglob[24m(7) patterns).  If [1m-F [22mis present, then [4mpath[24m is expanded as a format.  If [1m-q [22mis given, no error will be returned if [4mpath[24m does not exist.   With
               [1m-n[22m, the file is parsed but no commands are executed.  [1m-v [22mshows the parsed commands and line numbers if possible.

       [1mstart-server[0m
                     (alias: [1mstart[22m)
               Start the [1mtmux [22mserver, if not already running, without creating any sessions.

               Note that as by default the [1mtmux [22mserver will exit with no sessions, this is only useful if a session is created in [4m~/.tmux.conf[24m, [1mexit-empty [22mis turned off, or another command is run as part of the same command sequence.
               For example:

                     $ tmux start \; show -g

       [1msuspend-client [22m[[1m-t [4m[22mtarget-client[24m]
                     (alias: [1msuspendc[22m)
               Suspend a client by sending SIGTSTP (tty stop).

       [1mswitch-client [22m[[1m-ElnprZ[22m] [[1m-c [4m[22mtarget-client[24m] [[1m-t [4m[22mtarget-session[24m] [[1m-T [4m[22mkey-table[24m]
                     (alias: [1mswitchc[22m)
               Switch  the  current  session for client [4mtarget-client[24m to [4mtarget-session[24m.  As a special case, [1m-t [22mmay refer to a pane (a target that contains ‚Äò:‚Äô, ‚Äò.‚Äô or ‚Äò%‚Äô), to change session, window and pane.  In that case, [1m-Z [22mkeeps
               the window zoomed if it was zoomed.  If [1m-l[22m, [1m-n [22mor [1m-p [22mis used, the client is moved to the last, next or previous session respectively.  [1m-r [22mtoggles the client [1mread-only [22mand [1mignore-size [22mflags (see the [1mattach-session  [22mcom‚Äê
               mand).

               If [1m-E [22mis used, [1mupdate-environment [22moption will not be applied.

               [1m-T [22msets the client's key table; the next key from the client will be interpreted from [4mkey-table[24m.  This may be used to configure multiple prefix keys, or to bind commands to sequences of keys.  For example, to make typ‚Äê
               ing ‚Äòabc‚Äô run the [1mlist-keys [22mcommand:

                     bind-key -Ttable2 c list-keys
                     bind-key -Ttable1 b switch-client -Ttable2
                     bind-key -Troot   a switch-client -Ttable1

[1mWINDOWS AND PANES[0m
       Each  window displayed by [1mtmux [22mmay be split into one or more [4mpanes[24m; each pane takes up a certain area of the display and is a separate terminal.  A window may be split into panes using the [1msplit-window [22mcommand.  Windows may be
       split horizontally (with the [1m-h [22mflag) or vertically.  Panes may be resized with the [1mresize-pane [22mcommand (bound to ‚ÄòC-Up‚Äô, ‚ÄòC-Down‚Äô ‚ÄòC-Left‚Äô and ‚ÄòC-Right‚Äô by default), the current pane may be changed with the  [1mselect-pane  [22mcom‚Äê
       mand and the [1mrotate-window [22mand [1mswap-pane [22mcommands may be used to swap panes without changing their position.  Panes are numbered beginning from zero in the order they are created.

       By default, a [1mtmux [22mpane permits direct access to the terminal contained in the pane.  A pane may also be put into one of several modes:

             [1m-   [22mCopy mode, which permits a section of a window or its history to be copied to a [4mpaste[24m [4mbuffer[24m for later insertion into another window.  This mode is entered with the [1mcopy-mode [22mcommand, bound to ‚Äò[‚Äô by default.  Copied
                 text can be pasted with the [1mpaste-buffer [22mcommand, bound to ‚Äò]‚Äô.

             [1m-   [22mView mode, which is like copy mode but is entered when a command that produces output, such as [1mlist-keys[22m, is executed from a key binding.

             [1m-   [22mChoose mode, which allows an item to be chosen from a list.  This may be a client, a session or window or pane, or a buffer.  This mode is entered with the [1mchoose-buffer[22m, [1mchoose-client [22mand [1mchoose-tree [22mcommands.

       In copy mode an indicator is displayed in the top-right corner of the pane with the current position and the number of lines in the history.

       Commands are sent to copy mode using the [1m-X [22mflag to the [1msend-keys [22mcommand.  When a key is pressed, copy mode automatically uses one of two key tables, depending on the [1mmode-keys [22moption: [1mcopy-mode [22mfor emacs, or [1mcopy-mode-vi [22mfor
       vi.  Key tables may be viewed with the [1mlist-keys [22mcommand.

       The following commands are supported in copy mode:

       [1mappend-selection[0m
               Append the selection to the top paste buffer.

       [1mappend-selection-and-cancel [22m(vi: A)
               Append the selection to the top paste buffer and exit copy mode.

       [1mback-to-indentation [22m(vi: ^) (emacs: M-m)
               Move the cursor back to the indentation.

       [1mbegin-selection [22m(vi: Space) (emacs: C-Space)
               Begin selection.

       [1mbottom-line [22m(vi: L)
               Move to the bottom line.

       [1mcancel [22m(vi: q) (emacs: Escape)
               Exit copy mode.

       [1mclear-selection [22m(vi: Escape) (emacs: C-g)
               Clear the current selection.

       [1mcopy-end-of-line [22m[[4mprefix[24m]
               Copy from the cursor position to the end of the line.  [4mprefix[24m is used to name the new paste buffer.

       [1mcopy-end-of-line-and-cancel [22m[[4mprefix[24m]
               Copy from the cursor position and exit copy mode.

       [1mcopy-line [22m[[4mprefix[24m]
               Copy the entire line.

       [1mcopy-line-and-cancel [22m[[4mprefix[24m]
               Copy the entire line and exit copy mode.

       [1mcopy-selection [22m[[4mprefix[24m]
               Copies the current selection.

       [1mcopy-selection-and-cancel [22m[[4mprefix[24m] (vi: Enter) (emacs: M-w)
               Copy the current selection and exit copy mode.

       [1mcursor-down [22m(vi: j) (emacs: Down)
               Move the cursor down.

       [1mcursor-left [22m(vi: h) (emacs: Left)
               Move the cursor left.

       [1mcursor-right [22m(vi: l) (emacs: Right)
               Move the cursor right.

       [1mcursor-up [22m(vi: k) (emacs: Up)
               Move the cursor up.

       [1mend-of-line [22m(vi: $) (emacs: C-e)
               Move the cursor to the end of the line.

       [1mgoto-line [4m[22mline[24m (vi: :) (emacs: g)
               Move the cursor to a specific line.

       [1mhistory-bottom [22m(vi: G) (emacs: M->)
               Scroll to the bottom of the history.

       [1mhistory-top [22m(vi: g) (emacs: M-<)
               Scroll to the top of the history.

       [1mjump-again [22m(vi: ;) (emacs: ;)
               Repeat the last jump.

       [1mjump-backward [4m[22mto[24m (vi: F) (emacs: F)
               Jump backwards to the specified text.

       [1mjump-forward [4m[22mto[24m (vi: f) (emacs: f)
               Jump forward to the specified text.

       [1mjump-to-mark [22m(vi: M-x) (emacs: M-x)
               Jump to the last mark.

       [1mmiddle-line [22m(vi: M) (emacs: M-r)
               Move to the middle line.

       [1mnext-matching-bracket [22m(vi: %) (emacs: M-C-f)
               Move to the next matching bracket.

       [1mnext-paragraph [22m(vi: }) (emacs: M-})
               Move to the next paragraph.

       [1mnext-prompt [22m[[1m-o[22m]
               Move to the next prompt.

       [1mnext-word [22m(vi: w)
               Move to the next word.

       [1mpage-down [22m(vi: C-f) (emacs: PageDown)
               Scroll down by one page.

       [1mpage-up [22m(vi: C-b) (emacs: PageUp)
               Scroll up by one page.

       [1mprevious-matching-bracket [22m(emacs: M-C-b)
               Move to the previous matching bracket.

       [1mprevious-paragraph [22m(vi: {) (emacs: M-{)
               Move to the previous paragraph.

       [1mprevious-prompt [22m[[1m-o[22m]
               Move to the previous prompt.

       [1mprevious-word [22m(vi: b) (emacs: M-b)
               Move to the previous word.

       [1mrectangle-toggle [22m(vi: v) (emacs: R)
               Toggle rectangle selection mode.

       [1mrefresh-from-pane [22m(vi: r) (emacs: r)
               Refresh the content from the pane.

       [1msearch-again [22m(vi: n) (emacs: n)
               Repeat the last search.

       [1msearch-backward [4m[22mtext[24m (vi: ?)
               Search backwards for the specified text.

       [1msearch-forward [4m[22mtext[24m (vi: /)
               Search forward for the specified text.

       [1mselect-line [22m(vi: V)
               Select the current line.

       [1mselect-word[0m
               Select the current word.

       [1mstart-of-line [22m(vi: 0) (emacs: C-a)
               Move the cursor to the start of the line.

       [1mtop-line [22m(vi: H) (emacs: M-R)
               Move to the top line.

       The  search  commands come in several varieties: ‚Äòsearch-forward‚Äô and ‚Äòsearch-backward‚Äô search for a regular expression; the ‚Äò-text‚Äô variants search for a plain text string rather than a regular expression; ‚Äò-incremental‚Äô per‚Äê
       form an incremental search and expect to be used with the [1m-i [22mflag to the [1mcommand-prompt [22mcommand.  ‚Äòsearch-again‚Äô repeats the last search and ‚Äòsearch-reverse‚Äô does the same but reverses the direction (forward  becomes  backward
       and backward becomes forward).

       The  ‚Äònext-prompt‚Äô and ‚Äòprevious-prompt‚Äô move between shell prompts, but require the shell to emit an escape sequence (\033]133;A\033\\) to tell [1mtmux [22mwhere the prompts are located; if the shell does not do this, these commands
       will do nothing.  The [1m-o [22mflag jumps to the beginning of the command output instead of the shell prompt.

       Copy commands may take an optional buffer prefix argument which is used to generate the buffer name (the default is ‚Äòbuffer‚Äô so buffers are named ‚Äòbuffer0‚Äô, ‚Äòbuffer1‚Äô and so on).  Pipe commands take a command argument which is
       the command to which the selected text is piped.  ‚Äòcopy-pipe‚Äô variants also copy the selection.  The ‚Äò-and-cancel‚Äô variants of some commands exit copy mode after they have completed (for  copy  commands)  or  when  the  cursor
       reaches the bottom (for scrolling commands).  ‚Äò-no-clear‚Äô variants do not clear the selection.

       The  next and previous word keys skip over whitespace and treat consecutive runs of either word separators or other letters as words.  Word separators can be customized with the [4mword-separators[24m session option.  Next word moves
       to the start of the next word, next word end to the end of the next word and previous word to the start of the previous word.  The three next and previous space keys work similarly but use a space alone as the word  separator.
       Setting [4mword-separators[24m to the empty string makes next/previous word equivalent to next/previous space.

       The jump commands enable quick movement within a line.  For instance, typing ‚Äòf‚Äô followed by ‚Äò/‚Äô will move the cursor to the next ‚Äò/‚Äô character on the current line.  A ‚Äò;‚Äô will then jump to the next occurrence.

       Commands in copy mode may be prefaced by an optional repeat count.  With vi key bindings, a prefix is entered using the number keys; with emacs, the Alt (meta) key and a number begins prefix entry.

       The synopsis for the [1mcopy-mode [22mcommand is:

       [1mcopy-mode [22m[[1m-eHMqu[22m] [[1m-s [4m[22msrc-pane[24m] [[1m-t [4m[22mtarget-pane[24m]
               Enter  copy  mode.  The [1m-u [22moption scrolls one page up.  [1m-M [22mbegins a mouse drag (only valid if bound to a mouse key binding, see ‚ÄúMOUSE SUPPORT‚Äù).  [1m-H [22mhides the position indicator in the top right.  [1m-q [22mcancels copy mode
               and any other modes.  [1m-s [22mcopies from [4msrc-pane[24m instead of [4mtarget-pane[24m.

               [1m-e [22mspecifies that scrolling to the bottom of the history (to the visible screen) should exit copy mode.  While in copy mode, pressing a key other than those used for scrolling will disable this behaviour.  This is  in‚Äê
               tended to allow fast scrolling through a pane's history, for example with:

                     bind PageUp copy-mode -eu

       A  number  of preset arrangements of panes are available, these are called layouts.  These may be selected with the [1mselect-layout [22mcommand or cycled with [1mnext-layout [22m(bound to ‚ÄòSpace‚Äô by default); once a layout is chosen, panes
       within it may be moved and resized as normal.

       The following layouts are supported:

       [1meven-horizontal[0m
               Panes are spread out evenly from left to right across the window.

       [1meven-vertical[0m
               Panes are spread evenly from top to bottom.

       [1mmain-horizontal[0m
               A large (main) pane is shown at the top of the window and the remaining panes are spread from left to right in the leftover space at the bottom.  Use the [4mmain-pane-height[24m window option to specify the height of the  top
               pane.

       [1mmain-vertical[0m
               Similar to [1mmain-horizontal [22mbut the large pane is placed on the left and the others spread from top to bottom along the right.  See the [4mmain-pane-width[24m window option.

       [1mtiled   [22mPanes are spread out as evenly as possible over the window in both rows and columns.

       In addition, [1mselect-layout [22mmay be used to apply a previously used layout - the [1mlist-windows [22mcommand displays the layout of each window in a form suitable for use with [1mselect-layout[22m.  For example:

             $ tmux list-windows
             0: ksh [159x48]
                 layout: bb62,159x48,0,0{79x48,0,0,79x48,80,0}
             $ tmux select-layout 'bb62,159x48,0,0{79x48,0,0,79x48,80,0}'

       [1mtmux [22mautomatically adjusts the size of the layout for the current window size.  Note that a layout cannot be applied to a window with more panes than that from which the layout was originally defined.

       Commands related to windows and panes are as follows:

       [1mbreak-pane [22m[[1m-abdP[22m] [[1m-F [4m[22mformat[24m] [[1m-n [4m[22mwindow-name[24m] [[1m-s [4m[22msrc-pane[24m] [[1m-t [4m[22mdst-window[24m]
                     (alias: [1mbreakp[22m)
               Break  [4msrc-pane[24m  off  from its containing window to make it the only pane in [4mdst-window[24m.  With [1m-a [22mor [1m-b[22m, the window is moved to the next index after or before (existing windows are moved if necessary).  If [1m-d [22mis given,
               the new window does not become the current window.  The [1m-P [22moption prints information about the new window after it has been created.  By default, it uses the format ‚Äò#{session_name}:#{window_index}.#{pane_index}‚Äô but a
               different format may be specified with [1m-F[22m.

       [1mcapture-pane [22m[[1m-aAepPqCJN[22m] [[1m-b [4m[22mbuffer-name[24m] [[1m-E [4m[22mend-line[24m] [[1m-S [4m[22mstart-line[24m] [[1m-t [4m[22mtarget-pane[24m]
                     (alias: [1mcapturep[22m)
               Capture the contents of a pane.  If [1m-p [22mis given, the output goes to stdout, otherwise to the buffer specified with [1m-b [22mor a new buffer if omitted.  If [1m-a [22mis given, the alternate screen is used, and the  history  is  not
               accessible.  If no alternate screen exists, an error will be returned unless [1m-q [22mis given.  If [1m-e [22mis given, the output includes escape sequences for text and background attributes.  [1m-C [22malso escapes non-printable charac‚Äê
               ters as octal \xxx.  [1m-T [22mignores trailing positions that do not contain a character.  [1m-N [22mpreserves trailing spaces at each line's end and [1m-J [22mpreserves trailing spaces and joins any wrapped lines; [1m-J [22mimplies [1m-T[22m.  [1m-P [22mcap‚Äê
               tures only any output that the pane has received that is the beginning of an as-yet incomplete escape sequence.

               [1m-S  [22mand [1m-E [22mspecify the starting and ending line numbers, zero is the first line of the visible pane and negative numbers are lines in the history.  ‚Äò-‚Äô to [1m-S [22mis the start of the history and to [1m-E [22mthe end of the visible
               pane.  The default is to capture only the visible contents of the pane.

       [1mchoose-client [22m[[1m-NrZ[22m] [[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m] [[1m-K [4m[22mkey-format[24m] [[1m-O [4m[22msort-order[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mtemplate[24m]
               Put a pane into client mode, allowing a client to be selected interactively from a list.  Each client is shown on one line.  A shortcut key is shown on the left in brackets allowing for immediate choice,  or  the  list
               may be navigated and an item chosen or otherwise manipulated using the keys below.  [1m-Z [22mzooms the pane.  The following keys may be used in client mode:

                     [1mKey    Function[0m
                     [1mEnter  [22mChoose selected client
                     [1mUp     [22mSelect previous client
                     [1mDown   [22mSelect next client
                     [1mC-s    [22mSearch by name
                     [1mn      [22mRepeat last search
                     [1mt      [22mToggle if client is tagged
                     [1mT      [22mTag no clients
                     [1mC-t    [22mTag all clients
                     [1md      [22mDetach selected client
                     [1mD      [22mDetach tagged clients
                     [1mx      [22mDetach and HUP selected client
                     [1mX      [22mDetach and HUP tagged clients
                     [1mz      [22mSuspend selected client
                     [1mZ      [22mSuspend tagged clients
                     [1mf      [22mEnter a format to filter items
                     [1mO      [22mChange sort field
                     [1mr      [22mReverse sort order
                     [1mv      [22mToggle preview
                     [1mq      [22mExit mode

               After a client is chosen, ‚Äò%%‚Äô is replaced by the client name in [4mtemplate[24m and the result executed as a command.  If [4mtemplate[24m is not given, "detach-client -t '%%'" is used.

               [1m-O  [22mspecifies  the initial sort field: one of ‚Äòname‚Äô, ‚Äòsize‚Äô, ‚Äòcreation‚Äô (time), or ‚Äòactivity‚Äô (time).  [1m-r [22mreverses the sort order.  [1m-f [22mspecifies an initial filter: the filter is a format - if it evaluates to zero, the
               item in the list is not shown, otherwise it is shown.  If a filter would lead to an empty list, it is ignored.  [1m-F [22mspecifies the format for each item in the list and [1m-K [22ma format for each shortcut key; both  are  evalu‚Äê
               ated once for each line.  [1m-N [22mstarts without the preview.  This command works only if at least one client is attached.

       [1mchoose-tree [22m[[1m-GNrswZ[22m] [[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m] [[1m-K [4m[22mkey-format[24m] [[1m-O [4m[22msort-order[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mtemplate[24m]
               Put  a pane into tree mode, where a session, window or pane may be chosen interactively from a tree.  Each session, window or pane is shown on one line.  A shortcut key is shown on the left in brackets allowing for im‚Äê
               mediate choice, or the tree may be navigated and an item chosen or otherwise manipulated using the keys below.  [1m-s [22mstarts with sessions collapsed and [1m-w [22mwith windows collapsed.  [1m-Z [22mzooms the pane.  The  following  keys
               may be used in tree mode:

                     [1mKey    Function[0m
                     [1mEnter  [22mChoose selected item
                     [1mUp     [22mSelect previous item
                     [1mDown   [22mSelect next item
                     [1m+      [22mExpand selected item
                     [1m-      [22mCollapse selected item
                     [1mM-+    [22mExpand all items
                     [1mM--    [22mCollapse all items
                     [1mx      [22mKill selected item
                     [1mX      [22mKill tagged items
                     [1m<      [22mScroll list of previews left
                     [1m>      [22mScroll list of previews right
                     [1mC-s    [22mSearch by name
                     [1mm      [22mSet the marked pane
                     [1mM      [22mClear the marked pane
                     [1mn      [22mRepeat last search
                     [1mt      [22mToggle if item is tagged
                     [1mT      [22mTag no items
                     [1mC-t    [22mTag all items
                     [1m:      [22mRun a command for each tagged item
                     [1mf      [22mEnter a format to filter items
                     [1mH      [22mJump to the starting pane
                     [1mO      [22mChange sort field
                     [1mr      [22mReverse sort order
                     [1mv      [22mToggle preview
                     [1mq      [22mExit mode

               After  a session, window or pane is chosen, the first instance of ‚Äò%%‚Äô and all instances of ‚Äò%1‚Äô are replaced by the target in [4mtemplate[24m and the result executed as a command.  If [4mtemplate[24m is not given, "switch-client -t
               '%%'" is used.

               [1m-O [22mspecifies the initial sort field: one of ‚Äòindex‚Äô, ‚Äòname‚Äô, or ‚Äòtime‚Äô (activity).  [1m-r [22mreverses the sort order.  [1m-f [22mspecifies an initial filter: the filter is a format - if it evaluates to zero, the item in the list is
               not shown, otherwise it is shown.  If a filter would lead to an empty list, it is ignored.  [1m-F [22mspecifies the format for each item in the tree and [1m-K [22ma format for each shortcut key; both  are  evaluated  once  for  each
               line.  [1m-N [22mstarts without the preview.  [1m-G [22mincludes all sessions in any session groups in the tree rather than only the first.  This command works only if at least one client is attached.

       [1mcustomize-mode [22m[[1m-NZ[22m] [[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mtemplate[24m]
               Put a pane into customize mode, where options and key bindings may be browsed and modified from a list.  Option values in the list are shown for the active pane in the current window.  [1m-Z [22mzooms the pane.  The following
               keys may be used in customize mode:

                     [1mKey    Function[0m
                     [1mEnter  [22mSet pane, window, session or global option value
                     [1mUp     [22mSelect previous item
                     [1mDown   [22mSelect next item
                     [1m+      [22mExpand selected item
                     [1m-      [22mCollapse selected item
                     [1mM-+    [22mExpand all items
                     [1mM--    [22mCollapse all items
                     [1ms      [22mSet option value or key attribute
                     [1mS      [22mSet global option value
                     [1mw      [22mSet window option value, if option is for pane and window
                     [1md      [22mSet an option or key to the default
                     [1mD      [22mSet tagged options and tagged keys to the default
                     [1mu      [22mUnset an option (set to default value if global) or unbind a key
                     [1mU      [22mUnset tagged options and unbind tagged keys
                     [1mC-s    [22mSearch by name
                     [1mn      [22mRepeat last search
                     [1mt      [22mToggle if item is tagged
                     [1mT      [22mTag no items
                     [1mC-t    [22mTag all items
                     [1mf      [22mEnter a format to filter items
                     [1mv      [22mToggle option information
                     [1mq      [22mExit mode

               [1m-f  [22mspecifies  an  initial  filter: the filter is a format - if it evaluates to zero, the item in the list is not shown, otherwise it is shown.  If a filter would lead to an empty list, it is ignored.  [1m-F [22mspecifies the
               format for each item in the tree.  [1m-N [22mstarts without the option information.  This command works only if at least one client is attached.

       [1mdisplay-panes [22m[[1m-bN[22m] [[1m-d [4m[22mduration[24m] [[1m-t [4m[22mtarget-client[24m] [[4mtemplate[24m]
                     (alias: [1mdisplayp[22m)
               Display a visible indicator of each pane shown by [4mtarget-client[24m.  See the [1mdisplay-panes-colour [22mand [1mdisplay-panes-active-colour [22msession options.  The indicator is closed when a key is pressed (unless  [1m-N  [22mis  given)  or
               [4mduration[24m milliseconds have passed.  If [1m-d [22mis not given, [1mdisplay-panes-time [22mis used.  A duration of zero means the indicator stays until a key is pressed.  While the indicator is on screen, a pane may be chosen with the
               ‚Äò0‚Äô  to  ‚Äò9‚Äô keys, which will cause [4mtemplate[24m to be executed as a command with ‚Äò%%‚Äô substituted by the pane ID.  The default [4mtemplate[24m is "select-pane -t '%%'".  With [1m-b[22m, other commands are not blocked from running until
               the indicator is closed.

       [1mfind-window [22m[[1m-iCNrTZ[22m] [[1m-t [4m[22mtarget-pane[24m] [4mmatch-string[0m
                     (alias: [1mfindw[22m)
               Search for a [4mfnmatch[24m(3) pattern or, with [1m-r[22m, regular expression [4mmatch-string[24m in window names, titles, and visible content (but not history).  The flags control matching behavior: [1m-C [22mmatches  only  visible  window  con‚Äê
               tents, [1m-N [22mmatches only the window name and [1m-T [22mmatches only the window title.  [1m-i [22mmakes the search ignore case.  The default is [1m-CNT[22m.  [1m-Z [22mzooms the pane.

               This command works only if at least one client is attached.

       [1mjoin-pane [22m[[1m-bdfhv[22m] [[1m-l [4m[22msize[24m] [[1m-s [4m[22msrc-pane[24m] [[1m-t [4m[22mdst-pane[24m]
                     (alias: [1mjoinp[22m)
               Like  [1msplit-window[22m,  but instead of splitting [4mdst-pane[24m and creating a new pane, split it and move [4msrc-pane[24m into the space.  This can be used to reverse [1mbreak-pane[22m.  The [1m-b [22moption causes [4msrc-pane[24m to be joined to left of
               or above [4mdst-pane[24m.

               If [1m-s [22mis omitted and a marked pane is present (see [1mselect-pane -m[22m), the marked pane is used rather than the current pane.

       [1mkill-pane [22m[[1m-a[22m] [[1m-t [4m[22mtarget-pane[24m]
                     (alias: [1mkillp[22m)
               Destroy the given pane.  If no panes remain in the containing window, it is also destroyed.  The [1m-a [22moption kills all but the pane given with [1m-t[22m.

       [1mkill-window [22m[[1m-a[22m] [[1m-t [4m[22mtarget-window[24m]
                     (alias: [1mkillw[22m)
               Kill the current window or the window at [4mtarget-window[24m, removing it from any sessions to which it is linked.  The [1m-a [22moption kills all but the window given with [1m-t[22m.

       [1mlast-pane [22m[[1m-deZ[22m] [[1m-t [4m[22mtarget-window[24m]
                     (alias: [1mlastp[22m)
               Select the last (previously selected) pane.  [1m-Z [22mkeeps the window zoomed if it was zoomed.  [1m-e [22menables or [1m-d [22mdisables input to the pane.

       [1mlast-window [22m[[1m-t [4m[22mtarget-session[24m]
                     (alias: [1mlast[22m)
               Select the last (previously selected) window.  If no [4mtarget-session[24m is specified, select the last window of the current session.

       [1mlink-window [22m[[1m-abdk[22m] [[1m-s [4m[22msrc-window[24m] [[1m-t [4m[22mdst-window[24m]
                     (alias: [1mlinkw[22m)
               Link the window at [4msrc-window[24m to the specified [4mdst-window[24m.  If [4mdst-window[24m is specified and no such window exists, the [4msrc-window[24m is linked there.  With [1m-a [22mor [1m-b [22mthe window is moved to the next  index  after  or  before
               [4mdst-window[24m (existing windows are moved if necessary).  If [1m-k [22mis given and [4mdst-window[24m exists, it is killed, otherwise an error is generated.  If [1m-d [22mis given, the newly linked window is not selected.

       [1mlist-panes [22m[[1m-as[22m] [[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m] [[1m-t [4m[22mtarget[24m]
                     (alias: [1mlsp[22m)
               If  [1m-a  [22mis given, [4mtarget[24m is ignored and all panes on the server are listed.  If [1m-s [22mis given, [4mtarget[24m is a session (or the current session).  If neither is given, [4mtarget[24m is a window (or the current window).  [1m-F [22mspecifies
               the format of each line and [1m-f [22ma filter.  Only panes for which the filter is true are shown.  See the ‚ÄúFORMATS‚Äù section.

       [1mlist-windows [22m[[1m-a[22m] [[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m] [[1m-t [4m[22mtarget-session[24m]
                     (alias: [1mlsw[22m)
               If [1m-a [22mis given, list all windows on the server.  Otherwise, list windows in the current session or in [4mtarget-session[24m.  [1m-F [22mspecifies the format of each line and [1m-f [22ma filter.  Only windows for which the  filter  is  true
               are shown.  See the ‚ÄúFORMATS‚Äù section.

       [1mmove-pane [22m[[1m-bdfhv[22m] [[1m-l [4m[22msize[24m] [[1m-s [4m[22msrc-pane[24m] [[1m-t [4m[22mdst-pane[24m]
                     (alias: [1mmovep[22m)
               Does the same as [1mjoin-pane[22m.

       [1mmove-window [22m[[1m-abrdk[22m] [[1m-s [4m[22msrc-window[24m] [[1m-t [4m[22mdst-window[24m]
                     (alias: [1mmovew[22m)
               This is similar to [1mlink-window[22m, except the window at [4msrc-window[24m is moved to [4mdst-window[24m.  With [1m-r[22m, all windows in the session are renumbered in sequential order, respecting the [1mbase-index [22moption.

       [1mnew-window [22m[[1m-abdkPS[22m] [[1m-c [4m[22mstart-directory[24m] [[1m-e [4m[22menvironment[24m] [[1m-F [4m[22mformat[24m] [[1m-n [4m[22mwindow-name[24m] [[1m-t [4m[22mtarget-window[24m] [[4mshell-command[24m]
                     (alias: [1mneww[22m)
               Create a new window.  With [1m-a [22mor [1m-b[22m, the new window is inserted at the next index after or before the specified [4mtarget-window[24m, moving windows up if necessary; otherwise [4mtarget-window[24m is the new window location.

               If [1m-d [22mis given, the session does not make the new window the current window.  [4mtarget-window[24m represents the window to be created; if the target already exists an error is shown, unless the [1m-k [22mflag is used, in which case
               it is destroyed.  If [1m-S [22mis given and a window named [4mwindow-name[24m already exists, it is selected (unless [1m-d [22mis also given in which case the command does nothing).

               [4mshell-command[24m is the command to execute.  If [4mshell-command[24m is not specified, the value of the [1mdefault-command [22moption is used.  [1m-c [22mspecifies the working directory in which the new window is created.

               When the shell command completes, the window closes.  See the [1mremain-on-exit [22moption to change this behaviour.

               [1m-e [22mtakes the form ‚ÄòVARIABLE=value‚Äô and sets an environment variable for the newly created window; it may be specified multiple times.

               The  TERM  environment variable must be set to ‚Äòscreen‚Äô or ‚Äòtmux‚Äô for all programs running [4minside[24m [1mtmux[22m.  New windows will automatically have ‚ÄòTERM=screen‚Äô added to their environment, but care must be taken not to reset
               this in shell start-up files or by the [1m-e [22moption.

               The [1m-P [22moption prints information about the new window after it has been created.  By default, it uses the format ‚Äò#{session_name}:#{window_index}‚Äô but a different format may be specified with [1m-F[22m.

       [1mnext-layout [22m[[1m-t [4m[22mtarget-window[24m]
                     (alias: [1mnextl[22m)
               Move a window to the next layout and rearrange the panes to fit.

       [1mnext-window [22m[[1m-a[22m] [[1m-t [4m[22mtarget-session[24m]
                     (alias: [1mnext[22m)
               Move to the next window in the session.  If [1m-a [22mis used, move to the next window with an alert.

       [1mpipe-pane [22m[[1m-IOo[22m] [[1m-t [4m[22mtarget-pane[24m] [[4mshell-command[24m]
                     (alias: [1mpipep[22m)
               Pipe output sent by the program in [4mtarget-pane[24m to a shell command or vice versa.  A pane may only be connected to one command at a time, any existing pipe is closed before [4mshell-command[24m is executed.  The  [4mshell-command[0m
               string may contain the special character sequences supported by the [1mstatus-left [22moption.  If no [4mshell-command[24m is given, the current pipe (if any) is closed.

               [1m-I  [22mand  [1m-O  [22mspecify which of the [4mshell-command[24m output streams are connected to the pane: with [1m-I [22mstdout is connected (so anything [4mshell-command[24m prints is written to the pane as if it were typed); with [1m-O [22mstdin is con‚Äê
               nected (so any output in the pane is piped to [4mshell-command[24m).  Both may be used together and if neither are specified, [1m-O [22mis used.

               The [1m-o [22moption only opens a new pipe if no previous pipe exists, allowing a pipe to be toggled with a single key, for example:

                     bind-key C-p pipe-pane -o 'cat >>~/output.#I-#P'

       [1mprevious-layout [22m[[1m-t [4m[22mtarget-window[24m]
                     (alias: [1mprevl[22m)
               Move to the previous layout in the session.

       [1mprevious-window [22m[[1m-a[22m] [[1m-t [4m[22mtarget-session[24m]
                     (alias: [1mprev[22m)
               Move to the previous window in the session.  With [1m-a[22m, move to the previous window with an alert.

       [1mrename-window [22m[[1m-t [4m[22mtarget-window[24m] [4mnew-name[0m
                     (alias: [1mrenamew[22m)
               Rename the current window, or the window at [4mtarget-window[24m if specified, to [4mnew-name[24m.

       [1mresize-pane [22m[[1m-DLMRTUZ[22m] [[1m-t [4m[22mtarget-pane[24m] [[1m-x [4m[22mwidth[24m] [[1m-y [4m[22mheight[24m] [[4madjustment[24m]
                     (alias: [1mresizep[22m)
               Resize a pane, up, down, left or right by [4madjustment[24m with [1m-U[22m, [1m-D[22m, [1m-L [22mor [1m-R[22m, or to an absolute size with [1m-x [22mor [1m-y[22m.  The [4madjustment[24m is given in lines or columns (the default is 1); [1m-x [22mand [1m-y [22mmay be a given as a number of
               lines or columns or followed by ‚Äò%‚Äô for a percentage of the window size (for example ‚Äò-x 10%‚Äô).  With [1m-Z[22m, the active pane is toggled between zoomed (occupying the whole of the window) and unzoomed (its normal  position
               in the layout).

               [1m-M [22mbegins mouse resizing (only valid if bound to a mouse key binding, see ‚ÄúMOUSE SUPPORT‚Äù).

               [1m-T [22mtrims all lines below the current cursor position and moves lines out of the history to replace them.

       [1mresize-window [22m[[1m-aADLRU[22m] [[1m-t [4m[22mtarget-window[24m] [[1m-x [4m[22mwidth[24m] [[1m-y [4m[22mheight[24m] [[4madjustment[24m]
                     (alias: [1mresizew[22m)
               Resize  a  window, up, down, left or right by [4madjustment[24m with [1m-U[22m, [1m-D[22m, [1m-L [22mor [1m-R[22m, or to an absolute size with [1m-x [22mor [1m-y[22m.  The [4madjustment[24m is given in lines or cells (the default is 1).  [1m-A [22msets the size of the largest ses‚Äê
               sion containing the window; [1m-a [22mthe size of the smallest.  This command will automatically set [1mwindow-size [22mto manual in the window options.

       [1mrespawn-pane [22m[[1m-k[22m] [[1m-c [4m[22mstart-directory[24m] [[1m-e [4m[22menvironment[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mshell-command[24m]
                     (alias: [1mrespawnp[22m)
               Reactivate a pane in which the command has exited (see the [1mremain-on-exit [22mwindow option).  If [4mshell-command[24m is not given, the command used when the pane was created or last respawned is executed.  The pane must be  al‚Äê
               ready inactive, unless [1m-k [22mis given, in which case any existing command is killed.  [1m-c [22mspecifies a new working directory for the pane.  The [1m-e [22moption has the same meaning as for the [1mnew-window [22mcommand.

       [1mrespawn-window [22m[[1m-k[22m] [[1m-c [4m[22mstart-directory[24m] [[1m-e [4m[22menvironment[24m] [[1m-t [4m[22mtarget-window[24m] [[4mshell-command[24m]
                     (alias: [1mrespawnw[22m)
               Reactivate  a  window in which the command has exited (see the [1mremain-on-exit [22mwindow option).  If [4mshell-command[24m is not given, the command used when the window was created or last respawned is executed.  The window must
               be already inactive, unless [1m-k [22mis given, in which case any existing command is killed.  [1m-c [22mspecifies a new working directory for the window.  The [1m-e [22moption has the same meaning as for the [1mnew-window [22mcommand.

       [1mrotate-window [22m[[1m-DUZ[22m] [[1m-t [4m[22mtarget-window[24m]
                     (alias: [1mrotatew[22m)
               Rotate the positions of the panes within a window, either upward (numerically lower) with [1m-U [22mor downward (numerically higher).  [1m-Z [22mkeeps the window zoomed if it was zoomed.

       [1mselect-layout [22m[[1m-Enop[22m] [[1m-t [4m[22mtarget-pane[24m] [[4mlayout-name[24m]
                     (alias: [1mselectl[22m)
               Choose a specific layout for a window.  If [4mlayout-name[24m is not given, the last preset layout used (if any) is reapplied.  [1m-n [22mand [1m-p [22mare equivalent to the [1mnext-layout [22mand [1mprevious-layout [22mcommands.  [1m-o  [22mapplies  the  last
               set layout if possible (undoes the most recent layout change).  [1m-E [22mspreads the current pane and any panes next to it out evenly.

       [1mselect-pane [22m[[1m-DdeLlMmRUZ[22m] [[1m-T [4m[22mtitle[24m] [[1m-t [4m[22mtarget-pane[24m]
                     (alias: [1mselectp[22m)
               Make pane [4mtarget-pane[24m the active pane in its window.  If one of [1m-D[22m, [1m-L[22m, [1m-R[22m, or [1m-U [22mis used, respectively the pane below, to the left, to the right, or above the target pane is used.  [1m-Z [22mkeeps the window zoomed if it was
               zoomed.  [1m-l [22mis the same as using the [1mlast-pane [22mcommand.  [1m-e [22menables or [1m-d [22mdisables input to the pane.  [1m-T [22msets the pane title.

               [1m-m  [22mand [1m-M [22mare used to set and clear the [4mmarked[24m [4mpane[24m.  There is one marked pane at a time, setting a new marked pane clears the last.  The marked pane is the default target for [1m-s [22mto [1mjoin-pane[22m, [1mmove-pane[22m, [1mswap-pane [22mand
               [1mswap-window[22m.

       [1mselect-window [22m[[1m-lnpT[22m] [[1m-t [4m[22mtarget-window[24m]
                     (alias: [1mselectw[22m)
               Select the window at [4mtarget-window[24m.  [1m-l[22m, [1m-n [22mand [1m-p [22mare equivalent to the [1mlast-window[22m, [1mnext-window [22mand [1mprevious-window [22mcommands.  If [1m-T [22mis given and the selected window is already the current window, the command behaves
               like [1mlast-window[22m.

       [1msplit-window [22m[[1m-bdfhIvPZ[22m] [[1m-c [4m[22mstart-directory[24m] [[1m-e [4m[22menvironment[24m] [[1m-l [4m[22msize[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mshell-command[24m] [[1m-F [4m[22mformat[24m]
                     (alias: [1msplitw[22m)
               Create a new pane by splitting [4mtarget-pane[24m: [1m-h [22mdoes a horizontal split and [1m-v [22ma vertical split; if neither is specified, [1m-v [22mis assumed.  The [1m-l [22moption specifies the size of the new pane in lines (for vertical split) or
               in columns (for horizontal split); [4msize[24m may be followed by ‚Äò%‚Äô to specify a percentage of the available space.  The [1m-b [22moption causes the new pane to be created to the left of or above [4mtarget-pane[24m.  The [1m-f  [22moption  cre‚Äê
               ates a new pane spanning the full window height (with [1m-h[22m) or full window width (with [1m-v[22m), instead of splitting the active pane.  [1m-Z [22mzooms if the window is not zoomed, or keeps it zoomed if already zoomed.

               An  empty  [4mshell-command[24m ('') will create a pane with no command running in it.  Output can be sent to such a pane with the [1mdisplay-message [22mcommand.  The [1m-I [22mflag (if [4mshell-command[24m is not specified or empty) will create
               an empty pane and forward any output from stdin to it.  For example:

                     $ make 2>&1|tmux splitw -dI &

               All other options have the same meaning as for the [1mnew-window [22mcommand.

       [1mswap-pane [22m[[1m-dDUZ[22m] [[1m-s [4m[22msrc-pane[24m] [[1m-t [4m[22mdst-pane[24m]
                     (alias: [1mswapp[22m)
               Swap two panes.  If [1m-U [22mis used and no source pane is specified with [1m-s[22m, [4mdst-pane[24m is swapped with the previous pane (before it numerically); [1m-D [22mswaps with the next pane (after it numerically).  [1m-d [22minstructs [1mtmux [22mnot  to
               change the active pane and [1m-Z [22mkeeps the window zoomed if it was zoomed.

               If [1m-s [22mis omitted and a marked pane is present (see [1mselect-pane -m[22m), the marked pane is used rather than the current pane.

       [1mswap-window [22m[[1m-d[22m] [[1m-s [4m[22msrc-window[24m] [[1m-t [4m[22mdst-window[24m]
                     (alias: [1mswapw[22m)
               This is similar to [1mlink-window[22m, except the source and destination windows are swapped.  It is an error if no window exists at [4msrc-window[24m.  If [1m-d [22mis given, the new window does not become the current window.

               If [1m-s [22mis omitted and a marked pane is present (see [1mselect-pane -m[22m), the window containing the marked pane is used rather than the current window.

       [1munlink-window [22m[[1m-k[22m] [[1m-t [4m[22mtarget-window[24m]
                     (alias: [1munlinkw[22m)
               Unlink [4mtarget-window[24m.  Unless [1m-k [22mis given, a window may be unlinked only if it is linked to multiple sessions - windows may not be linked to no sessions; if [1m-k [22mis specified and the window is linked to only one session,
               it is unlinked and destroyed.

[1mKEY BINDINGS[0m
       [1mtmux [22mallows a command to be bound to most keys, with or without a prefix key.  When specifying keys, most represent themselves (for example ‚ÄòA‚Äô to ‚ÄòZ‚Äô).  Ctrl keys may be prefixed with ‚ÄòC-‚Äô or ‚Äò^‚Äô, Shift keys with ‚ÄòS-‚Äô and Alt
       (meta)  with  ‚ÄòM-‚Äô.  In addition, the following special key names are accepted: [4mUp[24m, [4mDown[24m, [4mLeft[24m, [4mRight[24m, [4mBSpace[24m, [4mBTab[24m, [4mDC[24m (Delete), [4mEnd[24m, [4mEnter[24m, [4mEscape[24m, [4mF1[24m to [4mF12[24m, [4mHome[24m, [4mIC[24m (Insert), [4mNPage/PageDown/PgDn[24m, [4mPPage/PageUp/PgUp[24m, [4mSpace[24m,
       and [4mTab[24m.  Note that to bind the ‚Äò"‚Äô or ‚Äò'‚Äô keys, quotation marks are necessary, for example:

             bind-key '"' split-window
             bind-key "'" new-window

       A command bound to the [4mAny[24m key will execute for all keys which do not have a more specific binding.

       Commands related to key bindings are as follows:

       [1mbind-key [22m[[1m-nr[22m] [[1m-N [4m[22mnote[24m] [[1m-T [4m[22mkey-table[24m] [4mkey[24m [4mcommand[24m [[4margument[24m [4m...[24m]
                     (alias: [1mbind[22m)
               Bind key [4mkey[24m to [4mcommand[24m.  Keys are bound in a key table.  By default (without -T), the key is bound in the [4mprefix[24m key table.  This table is used for keys pressed after the prefix key (for example,  by  default  ‚Äòc‚Äô  is
               bound  to  [1mnew-window  [22min the [4mprefix[24m table, so ‚ÄòC-b c‚Äô creates a new window).  The [4mroot[24m table is used for keys pressed without the prefix key: binding ‚Äòc‚Äô to [1mnew-window [22min the [4mroot[24m table (not recommended) means a plain
               ‚Äòc‚Äô will create a new window.  [1m-n [22mis an alias for [1m-T [4m[22mroot[24m.  Keys may also be bound in custom key tables and the [1mswitch-client -T [22mcommand used to switch to them from a key binding.  The [1m-r [22mflag indicates  this  key  may
               repeat, see the [1mrepeat-time [22moption.  [1m-N [22mattaches a note to the key (shown with [1mlist-keys -N[22m).

               To view the default bindings and possible commands, see the [1mlist-keys [22mcommand.

       [1mlist-keys [22m[[1m-1aN[22m] [[1m-P [4m[22mprefix-string[24m [1m-T [4m[22mkey-table[24m] [[4mkey[24m]
                     (alias: [1mlsk[22m)
               List key bindings.  There are two forms: the default lists keys as [1mbind-key [22mcommands; [1m-N [22mlists only keys with attached notes and shows only the key and note for each key.

               With the default form, all key tables are listed by default.  [1m-T [22mlists only keys in [4mkey-table[24m.

               With  the  [1m-N [22mform, only keys in the [4mroot[24m and [4mprefix[24m key tables are listed by default; [1m-T [22malso lists only keys in [4mkey-table[24m.  [1m-P [22mspecifies a prefix to print before each key and [1m-1 [22mlists only the first matching key.  [1m-a[0m
               lists the command for keys that do not have a note rather than skipping them.

       [1msend-keys [22m[[1m-FHKlMRX[22m] [[1m-c [4m[22mtarget-client[24m] [[1m-N [4m[22mrepeat-count[24m] [[1m-t [4m[22mtarget-pane[24m] [4mkey[24m [4m...[0m
                     (alias: [1msend[22m)
               Send a key or keys to a window or client.  Each argument [4mkey[24m is the name of the key (such as ‚ÄòC-a‚Äô or ‚ÄòNPage‚Äô) to send; if the string is not recognised as a key, it is sent as a series of characters.  If [1m-K  [22mis  given,
               keys  are sent to [4mtarget-client[24m, so they are looked up in the client's key table, rather than to [4mtarget-pane[24m.  All arguments are sent sequentially from first to last.  If no keys are given and the command is bound to a
               key, then that key is used.

               The [1m-l [22mflag disables key name lookup and processes the keys as literal UTF-8 characters.  The [1m-H [22mflag expects each key to be a hexadecimal number for an ASCII character.

               The [1m-R [22mflag causes the terminal state to be reset.

               [1m-M [22mpasses through a mouse event (only valid if bound to a mouse key binding, see ‚ÄúMOUSE SUPPORT‚Äù).

               [1m-X [22mis used to send a command into copy mode - see the ‚ÄúWINDOWS AND PANES‚Äù section.  [1m-N [22mspecifies a repeat count and [1m-F [22mexpands formats in arguments where appropriate.

       [1msend-prefix [22m[[1m-2[22m] [[1m-t [4m[22mtarget-pane[24m]
               Send the prefix key, or with [1m-2 [22mthe secondary prefix key, to a window as if it was pressed.

       [1munbind-key [22m[[1m-anq[22m] [[1m-T [4m[22mkey-table[24m] [4mkey[0m
                     (alias: [1munbind[22m)
               Unbind the command bound to [4mkey[24m.  [1m-n [22mand [1m-T [22mare the same as for [1mbind-key[22m.  If [1m-a [22mis present, all key bindings are removed.  The [1m-q [22moption prevents errors being returned.

[1mOPTIONS[0m
       The appearance and behaviour of [1mtmux [22mmay be modified by changing the value of various options.  There are four types of option: [4mserver[24m [4moptions[24m, [4msession[24m [4moptions[24m, [4mwindow[24m [4moptions[24m, and [4mpane[24m [4moptions[24m.

       The [1mtmux [22mserver has a set of global server options which do not apply to any particular window or session or pane.  These are altered with the [1mset-option -s [22mcommand, or displayed with the [1mshow-options -s [22mcommand.

       In addition, each individual session may have a set of session options, and there is a separate set of global session options.  Sessions which do not have a particular option configured inherit the value from the  global  ses‚Äê
       sion options.  Session options are set or unset with the [1mset-option [22mcommand and may be listed with the [1mshow-options [22mcommand.  The available server and session options are listed under the [1mset-option [22mcommand.

       Similarly,  a set of window options is attached to each window and a set of pane options to each pane.  Pane options inherit from window options.  This means any pane option may be set as a window option to apply the option to
       all panes in the window without the option set, for example these commands will set the background colour to red for all panes except pane 0:

             set -w window-style bg=red
             set -pt:.0 window-style bg=blue

       There is also a set of global window options from which any unset window or pane options are inherited.  Window and pane options are altered with [1mset-option -w [22mand [1m-p [22mcommands and displayed with [1mshow-option -w [22mand [1m-p[22m.

       [1mtmux [22malso supports user options which are prefixed with a ‚Äò@‚Äô.  User options may have any name, so long as they are prefixed with ‚Äò@‚Äô, and be set to any string.  For example:

             $ tmux set -wq @foo "abc123"
             $ tmux show -wv @foo
             abc123

       Commands which set options are as follows:

       [1mset-option [22m[[1m-aFgopqsuUw[22m] [[1m-t [4m[22mtarget-pane[24m] [4moption[24m [4mvalue[0m
                     (alias: [1mset[22m)
               Set a pane option with [1m-p[22m, a window option with [1m-w[22m, a server option with [1m-s[22m, otherwise a session option.  If the option is not a user option, [1m-w [22mor [1m-s [22mmay be unnecessary - [1mtmux [22mwill infer the type from the option name,
               assuming [1m-w [22mfor pane options.  If [1m-g [22mis given, the global session or window option is set.

               [1m-F [22mexpands formats in the option value.  The [1m-u [22mflag unsets an option, so a session inherits the option from the global options (or with [1m-g[22m, restores a global option to the default).  [1m-U [22munsets an option (like [1m-u[22m)  but
               if the option is a pane option also unsets the option on any panes in the window.  [4mvalue[24m depends on the option and may be a number, a string, or a flag (on, off, or omitted to toggle).

               The [1m-o [22mflag prevents setting an option that is already set and the [1m-q [22mflag suppresses errors about unknown or ambiguous options.

               With [1m-a[22m, and if the option expects a string or a style, [4mvalue[24m is appended to the existing setting.  For example:

                     set -g status-left "foo"
                     set -ag status-left "bar"

               Will result in ‚Äòfoobar‚Äô.  And:

                     set -g status-style "bg=red"
                     set -ag status-style "fg=blue"

               Will result in a red background [4mand[24m blue foreground.  Without [1m-a[22m, the result would be the default background and a blue foreground.

       [1mshow-options [22m[[1m-AgHpqsvw[22m] [[1m-t [4m[22mtarget-pane[24m] [[4moption[24m]
                     (alias: [1mshow[22m)
               Show  the pane options (or a single option if [4moption[24m is provided) with [1m-p[22m, the window options with [1m-w[22m, the server options with [1m-s[22m, otherwise the session options.  If the option is not a user option, [1m-w [22mor [1m-s [22mmay be un‚Äê
               necessary - [1mtmux [22mwill infer the type from the option name, assuming [1m-w [22mfor pane options.  Global session or window options are listed if [1m-g [22mis used.  [1m-v [22mshows only the option value, not the name.  If [1m-q [22mis set, no  er‚Äê
               ror will be returned if [4moption[24m is unset.  [1m-H [22mincludes hooks (omitted by default).  [1m-A [22mincludes options inherited from a parent set of options, such options are marked with an asterisk.

       Available server options are:

       [1mbackspace [4m[22mkey[0m
               Set the key sent by [1mtmux [22mfor backspace.

       [1mbuffer-limit [4m[22mnumber[0m
               Set the number of buffers; as new buffers are added to the top of the stack, old ones are removed from the bottom if necessary to maintain this maximum length.

       [1mcommand-alias[] [4m[22mname=value[0m
               This is an array of custom aliases for commands.  If an unknown command matches [4mname[24m, it is replaced with [4mvalue[24m.  For example, after:

                     [1mset -s command-alias[100] zoom='resize-pane -Z'[0m

               Using:

                     [1mzoom -t:.1[0m

               Is equivalent to:

                     [1mresize-pane -Z -t:.1[0m

               Note that aliases are expanded when a command is parsed rather than when it is executed, so binding an alias with [1mbind-key [22mwill bind the expanded form.

       [1mdefault-terminal [4m[22mterminal[0m
               Set the default terminal for new windows created in this session - the default value of the TERM environment variable.  For [1mtmux [22mto work correctly, this [4mmust[24m be set to ‚Äòscreen‚Äô, ‚Äòtmux‚Äô or a derivative of them.

       [1mcopy-command [4m[22mshell-command[0m
               Give the command to pipe to if the [1mcopy-pipe [22mcopy mode command is used without arguments.

       [1mescape-time [4m[22mtime[0m
               Set the time in milliseconds for which [1mtmux [22mwaits after an escape is input to determine if it is part of a function or meta key sequences.  The default is 500 milliseconds.

       [1meditor [4m[22mshell-command[0m
               Set the command used when [1mtmux [22mruns an editor.

       [1mexit-empty [22m[[1mon [22m| [1moff[22m]
               If enabled (the default), the server will exit when there are no active sessions.

       [1mexit-unattached [22m[[1mon [22m| [1moff[22m]
               If enabled, the server will exit when there are no attached clients.

       [1mextended-keys [22m[[1mon [22m| [1moff [22m| [1malways[22m]
               When  [1mon  [22mor  [1malways[22m, the escape sequence to enable extended keys is sent to the terminal, if [1mtmux [22mknows that it is supported.  [1mtmux [22malways recognises extended keys itself.  If this option is [1mon[22m, [1mtmux [22mwill only forward
               extended keys to applications when they request them; if [1malways[22m, [1mtmux [22mwill always forward the keys.

       [1mfocus-events [22m[[1mon [22m| [1moff[22m]
               When enabled, focus events are requested from the terminal if supported and passed through to applications running in [1mtmux[22m.  Attached clients should be detached and attached again after changing this option.

       [1mhistory-file [4m[22mpath[0m
               If not empty, a file to which [1mtmux [22mwill write command prompt history on exit and load it from on start.

       [1mmessage-limit [4m[22mnumber[0m
               Set the number of error or information messages to save in the message log for each client.

       [1mprompt-history-limit [4m[22mnumber[0m
               Set the number of history items to save in the history file for each type of command prompt.

       [1mset-clipboard [22m[[1mon [22m| [1mexternal [22m| [1moff[22m]
               Attempt to set the terminal clipboard content using the [4mxterm[24m(1) escape sequence, if there is an [4mMs[24m entry in the [4mterminfo[24m(5) description (see the ‚ÄúTERMINFO EXTENSIONS‚Äù section).

               If set to [1mon[22m, [1mtmux [22mwill both accept the escape sequence to create a buffer and attempt to set the terminal clipboard.  If set to [1mexternal[22m, [1mtmux [22mwill attempt to set the terminal clipboard but ignore attempts by applica‚Äê
               tions to set [1mtmux [22mbuffers.  If [1moff[22m, [1mtmux [22mwill neither accept the clipboard escape sequence nor attempt to set the clipboard.

               Note that this feature needs to be enabled in [4mxterm[24m(1) by setting the resource:

                     disallowedWindowOps: 20,21,SetXprop

               Or changing this property from the [4mxterm[24m(1) interactive menu when required.

       [1mterminal-features[] [4m[22mstring[0m
               Set terminal features for terminal types read from [4mterminfo[24m(5).  [1mtmux [22mhas a set of named terminal features.  Each will apply appropriate changes to the [4mterminfo[24m(5) entry in use.

               [1mtmux [22mcan detect features for a few common terminals; this option can be used to easily tell tmux about features supported by terminals it cannot detect.  The [1mterminal-overrides [22moption allows individual [4mterminfo[24m(5)  ca‚Äê
               pabilities  to be set instead, [1mterminal-features [22mis intended for classes of functionality supported in a standard way but not reported by [4mterminfo[24m(5).  Care must be taken to configure this only with features the termi‚Äê
               nal actually supports.

               This is an array option where each entry is a colon-separated string made up of a terminal type pattern (matched using [4mfnmatch[24m(3)) followed by a list of terminal features.  The available features are:

               256     Supports 256 colours with the SGR escape sequences.

               clipboard
                       Allows setting the system clipboard.

               ccolour
                       Allows setting the cursor colour.

               cstyle  Allows setting the cursor style.

               extkeys
                       Supports extended keys.

               focus   Supports focus reporting.

               hyperlinks
                       Supports OSC 8 hyperlinks.

               ignorefkeys
                       Ignore function keys from [4mterminfo[24m(5) and use the [1mtmux [22minternal set only.

               margins
                       Supports DECSLRM margins.

               mouse   Supports [4mxterm[24m(1) mouse sequences.

               osc7    Supports the OSC 7 working directory extension.

               overline
                       Supports the overline SGR attribute.

               rectfill
                       Supports the DECFRA rectangle fill escape sequence.

               RGB     Supports RGB colour with the SGR escape sequences.

               sixel   Supports SIXEL graphics.

               strikethrough
                       Supports the strikethrough SGR escape sequence.

               sync    Supports synchronized updates.

               title   Supports [4mxterm[24m(1) title setting.

               usstyle
                       Allows underscore style and colour to be set.

       [1mterminal-overrides[] [4m[22mstring[0m
               Allow terminal descriptions read using [4mterminfo[24m(5) to be overridden.  Each entry is a colon-separated string made up of a terminal type pattern (matched using [4mfnmatch[24m(3)) and a set of [4mname=value[24m entries.

               For example, to set the ‚Äòclear‚Äô [4mterminfo[24m(5) entry to ‚Äò\e[H\e[2J‚Äô for all terminal types matching ‚Äòrxvt*‚Äô:

                     [1mrxvt*:clear=\e[H\e[2J[0m

               The terminal entry value is passed through [4mstrunvis[24m(3) before interpretation.

       [1muser-keys[] [4m[22mkey[0m
               Set list of user-defined key escape sequences.  Each item is associated with a key named ‚ÄòUser0‚Äô, ‚ÄòUser1‚Äô, and so on.

               For example:

                     set -s user-keys[0] "\e[5;30012~"
                     bind User0 resize-pane -L 3

       Available session options are:

       [1mactivity-action [22m[[1many [22m| [1mnone [22m| [1mcurrent [22m| [1mother[22m]
               Set action on window activity when [1mmonitor-activity [22mis on.  [1many [22mmeans activity in any window linked to a session causes a bell or message (depending on [1mvisual-activity[22m) in the current window of that session, [1mnone [22mmeans
               all activity is ignored (equivalent to [1mmonitor-activity [22mbeing off), [1mcurrent [22mmeans only activity in windows other than the current window are ignored and [1mother [22mmeans activity in the current window  is  ignored  but  not
               those in other windows.

       [1massume-paste-time [4m[22mmilliseconds[0m
               If keys are entered faster than one in [4mmilliseconds[24m, they are assumed to have been pasted rather than typed and [1mtmux [22mkey bindings are not processed.  The default is one millisecond and zero disables.

       [1mbase-index [4m[22mindex[0m
               Set the base index from which an unused index should be searched when a new window is created.  The default is zero.

       [1mbell-action [22m[[1many [22m| [1mnone [22m| [1mcurrent [22m| [1mother[22m]
               Set action on a bell in a window when [1mmonitor-bell [22mis on.  The values are the same as those for [1mactivity-action[22m.

       [1mdefault-command [4m[22mshell-command[0m
               Set  the  command used for new windows (if not specified when the window is created) to [4mshell-command[24m, which may be any [4msh[24m(1) command.  The default is an empty string, which instructs [1mtmux [22mto create a login shell using
               the value of the [1mdefault-shell [22moption.

       [1mdefault-shell [4m[22mpath[0m
               Specify the default shell.  This is used as the login shell for new windows when the [1mdefault-command [22moption is set to empty, and must be the full path of the executable.  When started [1mtmux [22mtries to set a default  value
               from the first suitable of the SHELL environment variable, the shell returned by [4mgetpwuid[24m(3), or [4m/bin/sh[24m.  This option should be configured when [1mtmux [22mis used as a login shell.

       [1mdefault-size [4m[22mXxY[0m
               Set  the  default  size  of  new  windows when the [1mwindow-size [22moption is set to manual or when a session is created with [1mnew-session -d[22m.  The value is the width and height separated by an ‚Äòx‚Äô character.  The default is
               80x24.

       [1mdestroy-unattached [22m[[1moff [22m| [1mon [22m| [1mkeep-last [22m| [1mkeep-group[22m]
               If [1mon[22m, destroy the session after the last client has detached.  If [1moff [22m(the default), leave the session orphaned.  If [1mkeep-last[22m, destroy the session only if it is in a group and has other sessions in  that  group.   If
               [1mkeep-group[22m, destroy the session unless it is in a group and is the only session in that group.

       [1mdetach-on-destroy [22m[[1moff [22m| [1mon [22m| [1mno-detached [22m| [1mprevious [22m| [1mnext[22m]
               If  [1mon  [22m(the  default),  the client is detached when the session it is attached to is destroyed.  If [1moff[22m, the client is switched to the most recently active of the remaining sessions.  If [1mno-detached[22m, the client is de‚Äê
               tached only if there are no detached sessions; if detached sessions exist, the client is switched to the most recently active.  If [1mprevious [22mor [1mnext[22m, the client is switched to the previous or next session in  alphabeti‚Äê
               cal order.

       [1mdisplay-panes-active-colour [4m[22mcolour[0m
               Set the colour used by the [1mdisplay-panes [22mcommand to show the indicator for the active pane.

       [1mdisplay-panes-colour [4m[22mcolour[0m
               Set the colour used by the [1mdisplay-panes [22mcommand to show the indicators for inactive panes.

       [1mdisplay-panes-time [4m[22mtime[0m
               Set the time in milliseconds for which the indicators shown by the [1mdisplay-panes [22mcommand appear.

       [1mdisplay-time [4m[22mtime[0m
               Set the amount of time for which status line messages and other on-screen indicators are displayed.  If set to 0, messages and indicators are displayed until a key is pressed.  [4mtime[24m is in milliseconds.

       [1mhistory-limit [4m[22mlines[0m
               Set the maximum number of lines held in window history.  This setting applies only to new windows - existing window histories are not resized and retain the limit at the point they were created.

       [1mkey-table [4m[22mkey-table[0m
               Set the default key table to [4mkey-table[24m instead of [4mroot[24m.

       [1mlock-after-time [4m[22mnumber[0m
               Lock the session (like the [1mlock-session [22mcommand) after [4mnumber[24m seconds of inactivity.  The default is not to lock (set to 0).

       [1mlock-command [4m[22mshell-command[0m
               Command to run when locking each client.  The default is to run [4mlock[24m(1) with [1m-np[22m.

       [1mmenu-style [4m[22mstyle[0m
               Set the menu style.  See the ‚ÄúSTYLES‚Äù section on how to specify [4mstyle[24m.  Attributes are ignored.

       [1mmenu-selected-style [4m[22mstyle[0m
               Set the selected menu item style.  See the ‚ÄúSTYLES‚Äù section on how to specify [4mstyle[24m.  Attributes are ignored.

       [1mmenu-border-style [4m[22mstyle[0m
               Set the menu border style.  See the ‚ÄúSTYLES‚Äù section on how to specify [4mstyle[24m.  Attributes are ignored.

       [1mmenu-border-lines [4m[22mtype[0m
               Set the type of characters used for drawing menu borders.  See [1mpopup-border-lines [22mfor possible values for [4mborder-lines[24m.

       [1mmessage-command-style [4m[22mstyle[0m
               Set status line message command style.  This is used for the command prompt with [4mvi[24m(1) keys when in command mode.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mmessage-line [22m[[1m0 [22m| [1m1 [22m| [1m2 [22m| [1m3 [22m| [1m4[22m]
               Set line on which status line messages and the command prompt are shown.

       [1mmessage-style [4m[22mstyle[0m
               Set status line message style.  This is used for messages and for the command prompt.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mmouse [22m[[1mon [22m| [1moff[22m]
               If on, [1mtmux [22mcaptures the mouse and allows mouse events to be bound as key bindings.  See the ‚ÄúMOUSE SUPPORT‚Äù section for details.

       [1mprefix [4m[22mkey[0m
               Set the key accepted as a prefix key.  In addition to the standard keys described under ‚ÄúKEY BINDINGS‚Äù, [1mprefix [22mcan be set to the special key ‚ÄòNone‚Äô to set no prefix.

       [1mprefix2 [4m[22mkey[0m
               Set a secondary key accepted as a prefix key.  Like [1mprefix[22m, [1mprefix2 [22mcan be set to ‚ÄòNone‚Äô.

       [1mrenumber-windows [22m[[1mon [22m| [1moff[22m]
               If on, when a window is closed in a session, automatically renumber the other windows in numerical order.  This respects the [1mbase-index [22moption if it has been set.  If off, do not renumber the windows.

       [1mrepeat-time [4m[22mtime[0m
               Allow  multiple  commands  to  be entered without pressing the prefix-key again in the specified [4mtime[24m milliseconds (the default is 500).  Whether a key repeats may be set when it is bound using the [1m-r [22mflag to [1mbind-key[22m.
               Repeat is enabled for the default keys bound to the [1mresize-pane [22mcommand.

       [1mset-titles [22m[[1mon [22m| [1moff[22m]
               Attempt to set the client terminal title using the [4mtsl[24m and [4mfsl[24m [4mterminfo[24m(5) entries if they exist.  [1mtmux [22mautomatically sets these to the \e]0;...\007 sequence if the terminal appears to be [4mxterm[24m(1).  This option is  off
               by default.

       [1mset-titles-string [4m[22mstring[0m
               String used to set the client terminal title if [1mset-titles [22mis on.  Formats are expanded, see the ‚ÄúFORMATS‚Äù section.

       [1msilence-action [22m[[1many [22m| [1mnone [22m| [1mcurrent [22m| [1mother[22m]
               Set action on window silence when [1mmonitor-silence [22mis on.  The values are the same as those for [1mactivity-action[22m.

       [1mstatus [22m[[1moff [22m| [1mon [22m| [1m2 [22m| [1m3 [22m| [1m4 [22m| [1m5[22m]
               Show or hide the status line or specify its size.  Using [1mon [22mgives a status line one row in height; [1m2[22m, [1m3[22m, [1m4 [22mor [1m5 [22mmore rows.

       [1mstatus-format[] [4m[22mformat[0m
               Specify the format to be used for each line of the status line.  The default builds the top status line from the various individual status options below.

       [1mstatus-interval [4m[22minterval[0m
               Update the status line every [4minterval[24m seconds.  By default, updates will occur every 15 seconds.  A setting of zero disables redrawing at interval.

       [1mstatus-justify [22m[[1mleft [22m| [1mcentre [22m| [1mright [22m| [1mabsolute-centre[22m]
               Set  the  position of the window list in the status line: left, centre or right.  centre puts the window list in the relative centre of the available free space; absolute-centre uses the centre of the entire horizontal
               space.

       [1mstatus-keys [22m[[1mvi [22m| [1memacs[22m]
               Use vi or emacs-style key bindings in the status line, for example at the command prompt.  The default is emacs, unless the VISUAL or EDITOR environment variables are set and contain the string ‚Äòvi‚Äô.

       [1mstatus-left [4m[22mstring[0m
               Display [4mstring[24m (by default the session name) to the left of the status line.  [4mstring[24m will be passed through [4mstrftime[24m(3).  Also see the ‚ÄúFORMATS‚Äù and ‚ÄúSTYLES‚Äù sections.

               For details on how the names and titles can be set see the ‚ÄúNAMES AND TITLES‚Äù section.

               Examples are:

                     #(sysctl vm.loadavg)
                     #[fg=yellow,bold]#(apm -l)%%#[default] [#S]

               The default is ‚Äò[#S] ‚Äô.

       [1mstatus-left-length [4m[22mlength[0m
               Set the maximum [4mlength[24m of the left component of the status line.  The default is 10.

       [1mstatus-left-style [4m[22mstyle[0m
               Set the style of the left part of the status line.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mstatus-position [22m[[1mtop [22m| [1mbottom[22m]
               Set the position of the status line.

       [1mstatus-right [4m[22mstring[0m
               Display [4mstring[24m to the right of the status line.  By default, the current pane title in double quotes, the date and the time are shown.  As with [1mstatus-left[22m, [4mstring[24m will be passed to [4mstrftime[24m(3) and character pairs  are
               replaced.

       [1mstatus-right-length [4m[22mlength[0m
               Set the maximum [4mlength[24m of the right component of the status line.  The default is 40.

       [1mstatus-right-style [4m[22mstyle[0m
               Set the style of the right part of the status line.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mstatus-style [4m[22mstyle[0m
               Set status line style.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mupdate-environment[] [4m[22mvariable[0m
               Set list of environment variables to be copied into the session environment when a new session is created or an existing session is attached.  Any variables that do not exist in the source environment are set to be re‚Äê
               moved from the session environment (as if [1m-r [22mwas given to the [1mset-environment [22mcommand).

       [1mvisual-activity [22m[[1mon [22m| [1moff [22m| [1mboth[22m]
               If on, display a message instead of sending a bell when activity occurs in a window for which the [1mmonitor-activity [22mwindow option is enabled.  If set to both, a bell and a message are produced.

       [1mvisual-bell [22m[[1mon [22m| [1moff [22m| [1mboth[22m]
               If  on, a message is shown on a bell in a window for which the [1mmonitor-bell [22mwindow option is enabled instead of it being passed through to the terminal (which normally makes a sound).  If set to both, a bell and a mes‚Äê
               sage are produced.  Also see the [1mbell-action [22moption.

       [1mvisual-silence [22m[[1mon [22m| [1moff [22m| [1mboth[22m]
               If [1mmonitor-silence [22mis enabled, prints a message after the interval has expired on a given window instead of sending a bell.  If set to both, a bell and a message are produced.

       [1mword-separators [4m[22mstring[0m
               Sets the session's conception of what characters are considered word separators, for the purposes of the next and previous word commands in copy mode.

       Available window options are:

       [1maggressive-resize [22m[[1mon [22m| [1moff[22m]
               Aggressively resize the chosen window.  This means that [1mtmux [22mwill resize the window to the size of the smallest or largest session (see the [1mwindow-size [22moption) for which it is the current window, rather than  the  ses‚Äê
               sion  to which it is attached.  The window may resize when the current window is changed on another session; this option is good for full-screen programs which support SIGWINCH and poor for interactive programs such as
               shells.

       [1mautomatic-rename [22m[[1mon [22m| [1moff[22m]
               Control automatic window renaming.  When this setting is enabled, [1mtmux [22mwill rename the window automatically using the format specified by [1mautomatic-rename-format[22m.  This flag is automatically disabled for an  individual
               window when a name is specified at creation with [1mnew-window [22mor [1mnew-session[22m, or later with [1mrename-window[22m, or with a terminal escape sequence.  It may be switched off globally with:

                     set-option -wg automatic-rename off

       [1mautomatic-rename-format [4m[22mformat[0m
               The format (see ‚ÄúFORMATS‚Äù) used when the [1mautomatic-rename [22moption is enabled.

       [1mclock-mode-colour [4m[22mcolour[0m
               Set clock colour.

       [1mclock-mode-style [22m[[1m12 [22m| [1m24[22m]
               Set clock hour format.

       [1mfill-character [4m[22mcharacter[0m
               Set the character used to fill areas of the terminal unused by a window.

       [1mmain-pane-height [4m[22mheight[0m
       [1mmain-pane-width [4m[22mwidth[0m
               Set the width or height of the main (left or top) pane in the [1mmain-horizontal [22mor [1mmain-vertical [22mlayouts.  If suffixed by ‚Äò%‚Äô, this is a percentage of the window size.

       [1mcopy-mode-match-style [4m[22mstyle[0m
               Set the style of search matches in copy mode.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mcopy-mode-mark-style [4m[22mstyle[0m
               Set the style of the line containing the mark in copy mode.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mcopy-mode-current-match-style [4m[22mstyle[0m
               Set the style of the current search match in copy mode.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mmode-keys [22m[[1mvi [22m| [1memacs[22m]
               Use vi or emacs-style key bindings in copy mode.  The default is emacs, unless VISUAL or EDITOR contains ‚Äòvi‚Äô.

       [1mmode-style [4m[22mstyle[0m
               Set window modes style.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mmonitor-activity [22m[[1mon [22m| [1moff[22m]
               Monitor for activity in the window.  Windows with activity are highlighted in the status line.

       [1mmonitor-bell [22m[[1mon [22m| [1moff[22m]
               Monitor for a bell in the window.  Windows with a bell are highlighted in the status line.

       [1mmonitor-silence [22m[[1minterval[22m]
               Monitor for silence (no activity) in the window within [1minterval [22mseconds.  Windows that have been silent for the interval are highlighted in the status line.  An interval of zero disables the monitoring.

       [1mother-pane-height [4m[22mheight[0m
               Set  the  height  of the other panes (not the main pane) in the [1mmain-horizontal [22mlayout.  If this option is set to 0 (the default), it will have no effect.  If both the [1mmain-pane-height [22mand [1mother-pane-height [22moptions are
               set, the main pane will grow taller to make the other panes the specified height, but will never shrink to do so.  If suffixed by ‚Äò%‚Äô, this is a percentage of the window size.

       [1mother-pane-width [4m[22mwidth[0m
               Like [1mother-pane-height[22m, but set the width of other panes in the [1mmain-vertical [22mlayout.

       [1mpane-active-border-style [4m[22mstyle[0m
               Set the pane border style for the currently active pane.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.  Attributes are ignored.

       [1mpane-base-index [4m[22mindex[0m
               Like [1mbase-index[22m, but set the starting index for pane numbers.

       [1mpane-border-format [4m[22mformat[0m
               Set the text shown in pane border status lines.

       [1mpane-border-indicators [22m[[1moff [22m| [1mcolour [22m| [1marrows [22m| [1mboth[22m]
               Indicate active pane by colouring only half of the border in windows with exactly two panes, by displaying arrow markers, by drawing both or neither.

       [1mpane-border-lines [4m[22mtype[0m
               Set the type of characters used for drawing pane borders.  [4mtype[24m may be one of:

               single  single lines using ACS or UTF-8 characters

               double  double lines using UTF-8 characters

               heavy   heavy lines using UTF-8 characters

               simple  simple ASCII characters

               number  the pane number

               ‚Äòdouble‚Äô and ‚Äòheavy‚Äô will fall back to standard ACS line drawing when UTF-8 is not supported.

       [1mpane-border-status [22m[[1moff [22m| [1mtop [22m| [1mbottom[22m]
               Turn pane border status lines off or set their position.

       [1mpane-border-style [4m[22mstyle[0m
               Set the pane border style for panes aside from the active pane.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.  Attributes are ignored.

       [1mpopup-style [4m[22mstyle[0m
               Set the popup style.  See the ‚ÄúSTYLES‚Äù section on how to specify [4mstyle[24m.  Attributes are ignored.

       [1mpopup-border-style [4m[22mstyle[0m
               Set the popup border style.  See the ‚ÄúSTYLES‚Äù section on how to specify [4mstyle[24m.  Attributes are ignored.

       [1mpopup-border-lines [4m[22mtype[0m
               Set the type of characters used for drawing popup borders.  [4mtype[24m may be one of:

               single  single lines using ACS or UTF-8 characters (default)

               rounded
                       variation of single with rounded corners using UTF-8 characters

               double  double lines using UTF-8 characters

               heavy   heavy lines using UTF-8 characters

               simple  simple ASCII characters

               padded  simple ASCII space character

               none    no border

               ‚Äòdouble‚Äô and ‚Äòheavy‚Äô will fall back to standard ACS line drawing when UTF-8 is not supported.

       [1mwindow-status-activity-style [4m[22mstyle[0m
               Set status line style for windows with an activity alert.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mwindow-status-bell-style [4m[22mstyle[0m
               Set status line style for windows with a bell alert.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mwindow-status-current-format [4m[22mstring[0m
               Like [4mwindow-status-format[24m, but is the format used when the window is the current window.

       [1mwindow-status-current-style [4m[22mstyle[0m
               Set status line style for the currently active window.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mwindow-status-format [4m[22mstring[0m
               Set the format in which the window is displayed in the status line window list.  See the ‚ÄúFORMATS‚Äù and ‚ÄúSTYLES‚Äù sections.

       [1mwindow-status-last-style [4m[22mstyle[0m
               Set status line style for the last active window.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mwindow-status-separator [4m[22mstring[0m
               Sets the separator drawn between windows in the status line.  The default is a single space character.

       [1mwindow-status-style [4m[22mstyle[0m
               Set status line style for a single window.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mwindow-size [4m[22mlargest[24m | [4msmallest[24m | [4mmanual[24m | [4mlatest[0m
               Configure how [1mtmux [22mdetermines the window size.  If set to [4mlargest[24m, the size of the largest attached session is used; if [4msmallest[24m, the size of the smallest.  If [4mmanual[24m,  the  size  of  a  new  window  is  set  from  the
               [1mdefault-size [22moption and windows are resized automatically.  With [4mlatest[24m, [1mtmux [22muses the size of the client that had the most recent activity.  See also the [1mresize-window [22mcommand and the [1maggressive-resize [22moption.

       [1mwrap-search [22m[[1mon [22m| [1moff[22m]
               If this option is set, searches will wrap around the end of the pane contents.  The default is on.

       Available pane options are:

       [1mallow-passthrough [22m[[1mon [22m| [1moff [22m| [1mall[22m]
               Allow  programs in the pane to bypass [1mtmux [22musing a terminal escape sequence (\ePtmux;...\e\\).  If set to [1mon[22m, passthrough sequences will be allowed only if the pane is visible.  If set to [1mall[22m, they will be allowed even
               if the pane is invisible.

       [1mallow-rename [22m[[1mon [22m| [1moff[22m]
               Allow programs in the pane to change the window name using a terminal escape sequence (\ek...\e\\).

       [1malternate-screen [22m[[1mon [22m| [1moff[22m]
               This option configures whether programs running inside the pane may use the terminal alternate screen feature, which allows the [4msmcup[24m and [4mrmcup[24m [4mterminfo[24m(5) capabilities.  The alternate screen feature preserves the con‚Äê
               tents of the window when an interactive application starts and restores it on exit, so that any output visible before the application starts reappears unchanged after it exits.

       [1mcursor-colour [4m[22mcolour[0m
               Set the colour of the cursor.

       [1mpane-colours[] [4m[22mcolour[0m
               The default colour palette.  Each entry in the array defines the colour [1mtmux [22muses when the colour with that index is requested.  The index may be from zero to 255.

       [1mcursor-style [4m[22mstyle[0m
               Set the style of the cursor.  Available styles are: [1mdefault[22m, [1mblinking-block[22m, [1mblock[22m, [1mblinking-underline[22m, [1munderline[22m, [1mblinking-bar[22m, [1mbar[22m.

       [1mremain-on-exit [22m[[1mon [22m| [1moff [22m| [1mfailed[22m]
               A pane with this flag set is not destroyed when the program running in it exits.  If set to [1mfailed[22m, then only when the program exit status is not zero.  The pane may be reactivated with the [1mrespawn-pane [22mcommand.

       [1mremain-on-exit-format [4m[22mstring[0m
               Set the text shown at the bottom of exited panes when [1mremain-on-exit [22mis enabled.

       [1mscroll-on-clear [22m[[1mon [22m| [1moff[22m]
               When the entire screen is cleared and this option is on, scroll the contents of the screen into history before clearing it.

       [1msynchronize-panes [22m[[1mon [22m| [1moff[22m]
               Duplicate input to all other panes in the same window where this option is also on (only for panes that are not in any mode).

       [1mwindow-active-style [4m[22mstyle[0m
               Set the pane style when it is the active pane.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

       [1mwindow-style [4m[22mstyle[0m
               Set the pane style.  For how to specify [4mstyle[24m, see the ‚ÄúSTYLES‚Äù section.

[1mHOOKS[0m
       [1mtmux [22mallows commands to run on various triggers, called [4mhooks[24m.  Most [1mtmux [22mcommands have an [4mafter[24m hook and there are a number of hooks not associated with commands.

       Hooks are stored as array options, members of the array are executed in order when the hook is triggered.  Like options different hooks may be global or belong to a session, window or pane.  Hooks may be  configured  with  the
       [1mset-hook [22mor [1mset-option [22mcommands and displayed with [1mshow-hooks [22mor [1mshow-options -H[22m.  The following two commands are equivalent:

              set-hook -g pane-mode-changed[42] 'set -g status-left-style bg=red'
              set-option -g pane-mode-changed[42] 'set -g status-left-style bg=red'

       Setting a hook without specifying an array index clears the hook and sets the first member of the array.

       A  command's  after  hook is run after it completes, except when the command is run as part of a hook itself.  They are named with an ‚Äòafter-‚Äô prefix.  For example, the following command adds a hook to select the even-vertical
       layout after every [1msplit-window[22m:

             set-hook -g after-split-window "selectl even-vertical"

       All the notifications listed in the ‚ÄúCONTROL MODE‚Äù section are hooks (without any arguments), except [1m%exit[22m.  The following additional hooks are available:

       alert-activity          Run when a window has activity.  See [1mmonitor-activity[22m.

       alert-bell              Run when a window has received a bell.  See [1mmonitor-bell[22m.

       alert-silence           Run when a window has been silent.  See [1mmonitor-silence[22m.

       client-active           Run when a client becomes the latest active client of its session.

       client-attached         Run when a client is attached.

       client-detached         Run when a client is detached

       client-focus-in         Run when focus enters a client

       client-focus-out        Run when focus exits a client

       client-resized          Run when a client is resized.

       client-session-changed  Run when a client's attached session is changed.

       pane-died               Run when the program running in a pane exits, but [1mremain-on-exit [22mis on so the pane has not closed.

       pane-exited             Run when the program running in a pane exits.

       pane-focus-in           Run when the focus enters a pane, if the [1mfocus-events [22moption is on.

       pane-focus-out          Run when the focus exits a pane, if the [1mfocus-events [22moption is on.

       pane-set-clipboard      Run when the terminal clipboard is set using the [4mxterm[24m(1) escape sequence.

       session-created         Run when a new session created.

       session-closed          Run when a session closed.

       session-renamed         Run when a session is renamed.

       window-linked           Run when a window is linked into a session.

       window-renamed          Run when a window is renamed.

       window-resized          Run when a window is resized.  This may be after the [4mclient-resized[24m hook is run.

       window-unlinked         Run when a window is unlinked from a session.

       Hooks are managed with these commands:

       [1mset-hook [22m[[1m-agpRuw[22m] [[1m-t [4m[22mtarget-pane[24m] [4mhook-name[24m [4mcommand[0m
               Without [1m-R[22m, sets (or with [1m-u [22munsets) hook [4mhook-name[24m to [4mcommand[24m.  The flags are the same as for [1mset-option[22m.

               With [1m-R[22m, run [4mhook-name[24m immediately.

       [1mshow-hooks [22m[[1m-gpw[22m] [[1m-t [4m[22mtarget-pane[24m]
               Shows hooks.  The flags are the same as for [1mshow-options[22m.

[1mMOUSE SUPPORT[0m
       If the [1mmouse [22moption is on (the default is off), [1mtmux [22mallows mouse events to be bound as keys.  The name of each key is made up of a mouse event (such as ‚ÄòMouseUp1‚Äô) and a location suffix, one of the following:

             [1mPane             [22mthe contents of a pane
             [1mBorder           [22ma pane border
             [1mStatus           [22mthe status line window list
             [1mStatusLeft       [22mthe left part of the status line
             [1mStatusRight      [22mthe right part of the status line
             [1mStatusDefault    [22many other part of the status line

       The following mouse events are available:

             [1mWheelUp       [22mWheelDown
             [1mMouseDown1    [22mMouseUp1      MouseDrag1   MouseDragEnd1
             [1mMouseDown2    [22mMouseUp2      MouseDrag2   MouseDragEnd2
             [1mMouseDown3    [22mMouseUp3      MouseDrag3   MouseDragEnd3
             [1mSecondClick1  [22mSecondClick2  SecondClick3
             [1mDoubleClick1  [22mDoubleClick2  DoubleClick3
             [1mTripleClick1  [22mTripleClick2  TripleClick3

       The ‚ÄòSecondClick‚Äô events are fired for the second click of a double click, even if there may be a third click which will fire ‚ÄòTripleClick‚Äô instead of ‚ÄòDoubleClick‚Äô.

       Each should be suffixed with a location, for example ‚ÄòMouseDown1Status‚Äô.

       The special token ‚Äò{mouse}‚Äô or ‚Äò=‚Äô may be used as [4mtarget-window[24m or [4mtarget-pane[24m in commands bound to mouse key bindings.  It resolves to the window or pane over which the mouse event took place (for example, the window  in  the
       status line over which button 1 was released for a ‚ÄòMouseUp1Status‚Äô binding, or the pane over which the wheel was scrolled for a ‚ÄòWheelDownPane‚Äô binding).

       The [1msend-keys -M [22mflag may be used to forward a mouse event to a pane.

       The default key bindings allow the mouse to be used to select and resize panes, to copy text and to change window using the status line.  These take effect if the [1mmouse [22moption is turned on.

[1mFORMATS[0m
       Certain  commands accept the [1m-F [22mflag with a [4mformat[24m argument.  This is a string which controls the output format of the command.  Format variables are enclosed in ‚Äò#{‚Äô and ‚Äò}‚Äô, for example ‚Äò#{session_name}‚Äô.  The possible vari‚Äê
       ables are listed in the table below, or the name of a [1mtmux [22moption may be used for an option's value.  Some variables have a shorter alias such as ‚Äò#S‚Äô; ‚Äò##‚Äô is replaced by a single ‚Äò#‚Äô, ‚Äò#,‚Äô by a ‚Äò,‚Äô and ‚Äò#}‚Äô by a ‚Äò}‚Äô.

       Conditionals are available by prefixing with ‚Äò?‚Äô and separating two alternatives with a comma; if the specified variable exists and is not zero, the first alternative is chosen, otherwise  the  second  is  used.   For  example
       ‚Äò#{?session_attached,attached,not  attached}‚Äô  will  include  the  string  ‚Äòattached‚Äô  if  the  session  is  attached  and  the  string ‚Äònot attached‚Äô if it is unattached, or ‚Äò#{?automatic-rename,yes,no}‚Äô will include ‚Äòyes‚Äô if
       [1mautomatic-rename [22mis enabled, or ‚Äòno‚Äô if not.  Conditionals can be nested arbitrarily.  Inside a conditional, ‚Äò,‚Äô and ‚Äò}‚Äô must be escaped as ‚Äò#,‚Äô and ‚Äò#}‚Äô, unless they are part of a ‚Äò#{...}‚Äô replacement.  For example:

             #{?pane_in_mode,#[fg=white#,bg=red],#[fg=red#,bg=white]}#W .

       String comparisons may be expressed by prefixing two comma-separated alternatives by ‚Äò==‚Äô, ‚Äò!=‚Äô, ‚Äò<‚Äô, ‚Äò>‚Äô, ‚Äò<=‚Äô or ‚Äò>=‚Äô and a colon.  For example ‚Äò#{==:#{host},myhost}‚Äô will be replaced by ‚Äò1‚Äô if running on ‚Äòmyhost‚Äô, otherwise
       by ‚Äò0‚Äô.  ‚Äò||‚Äô and ‚Äò&&‚Äô evaluate to true if either or both of two comma-separated alternatives are true, for example ‚Äò#{||:#{pane_in_mode},#{alternate_on}}‚Äô.

       An ‚Äòm‚Äô specifies an [4mfnmatch[24m(3) or regular expression comparison.  The first argument is the pattern and the second the string to compare.  An optional argument specifies flags: ‚Äòr‚Äô means the pattern is a regular expression in‚Äê
       stead of the default [4mfnmatch[24m(3) pattern, and ‚Äòi‚Äô means to ignore case.  For example: ‚Äò#{m:*foo*,#{host}}‚Äô or ‚Äò#{m/ri:^A,MYVAR}‚Äô.  A ‚ÄòC‚Äô performs a search for an [4mfnmatch[24m(3) pattern or regular expression in the pane content  and
       evaluates to zero if not found, or a line number if found.  Like ‚Äòm‚Äô, an ‚Äòr‚Äô flag means search for a regular expression and ‚Äòi‚Äô ignores case.  For example: ‚Äò#{C/r:^Start}‚Äô

       Numeric  operators  may  be performed by prefixing two comma-separated alternatives with an ‚Äòe‚Äô and an operator.  An optional ‚Äòf‚Äô flag may be given after the operator to use floating point numbers, otherwise integers are used.
       This may be followed by a number giving the number of decimal places to use for the result.  The available operators are: addition ‚Äò+‚Äô, subtraction ‚Äò-‚Äô, multiplication ‚Äò*‚Äô, division ‚Äò/‚Äô, modulus ‚Äòm‚Äô or ‚Äò%‚Äô (note that ‚Äò%‚Äô  must
       be  escaped  as  ‚Äò%%‚Äô in formats which are also expanded by [4mstrftime[24m(3)) and numeric comparison operators ‚Äò==‚Äô, ‚Äò!=‚Äô, ‚Äò<‚Äô, ‚Äò<=‚Äô, ‚Äò>‚Äô and ‚Äò>=‚Äô.  For example, ‚Äò#{e|*|f|4:5.5,3}‚Äô multiplies 5.5 by 3 for a result with four decimal
       places and ‚Äò#{e|%%:7,3}‚Äô returns the modulus of 7 and 3.  ‚Äòa‚Äô replaces a numeric argument by its ASCII equivalent, so ‚Äò#{a:98}‚Äô results in ‚Äòb‚Äô.  ‚Äòc‚Äô replaces a [1mtmux [22mcolour by its six-digit hexadecimal RGB value.

       A limit may be placed on the length of the resultant string by prefixing it by an ‚Äò=‚Äô, a number and a colon.  Positive numbers count from the start of the string and negative from the end, so ‚Äò#{=5:pane_title}‚Äô will include at
       most the first five characters of the pane title, or ‚Äò#{=-5:pane_title}‚Äô the last five characters.  A suffix or prefix may be given as a second argument - if provided then it is appended or  prepended  to  the  string  if  the
       length  has been trimmed, for example ‚Äò#{=/5/...:pane_title}‚Äô will append ‚Äò...‚Äô if the pane title is more than five characters.  Similarly, ‚Äòp‚Äô pads the string to a given width, for example ‚Äò#{p10:pane_title}‚Äô will result in a
       width of at least 10 characters.  A positive width pads on the left, a negative on the right.  ‚Äòn‚Äô expands to the length of the variable and ‚Äòw‚Äô to its width when displayed, for example ‚Äò#{n:window_name}‚Äô.

       Prefixing a time variable with ‚Äòt:‚Äô will convert it to a string, so if ‚Äò#{window_activity}‚Äô gives ‚Äò1445765102‚Äô, ‚Äò#{t:window_activity}‚Äô gives ‚ÄòSun Oct 25 09:25:02 2015‚Äô.  Adding ‚Äòp (‚Äô ‚Äò`t/p`‚Äô) will use shorter but less accurate
       time format for times in the past.  A custom format may be given using an ‚Äòf‚Äô suffix (note that ‚Äò%‚Äô must be escaped as ‚Äò%%‚Äô if the format is separately being passed through [4mstrftime[24m(3), for example in the [1mstatus-left  [22moption):
       ‚Äò#{t/f/%%H#:%%M:window_activity}‚Äô, see [4mstrftime[24m(3).

       The  ‚Äòb:‚Äô and ‚Äòd:‚Äô prefixes are [4mbasename[24m(3) and [4mdirname[24m(3) of the variable respectively.  ‚Äòq:‚Äô will escape [4msh[24m(1) special characters or with a ‚Äòh‚Äô suffix, escape hash characters (so ‚Äò#‚Äô becomes ‚Äò##‚Äô).  ‚ÄòE:‚Äô will expand the for‚Äê
       mat twice, for example ‚Äò#{E:status-left}‚Äô is the result of expanding the content of the [1mstatus-left [22moption rather than the option itself.  ‚ÄòT:‚Äô is like ‚ÄòE:‚Äô but also expands [4mstrftime[24m(3) specifiers.  ‚ÄòS:‚Äô, ‚ÄòW:‚Äô,  ‚ÄòP:‚Äô  or  ‚ÄòL:‚Äô
       will loop over each session, window, pane or client and insert the format once for each.  For windows and panes, two comma-separated formats may be given: the second is used for the current window or active pane.  For example,
       to get a list of windows formatted like the status line:

             #{W:#{E:window-status-format} ,#{E:window-status-current-format} }

       ‚ÄòN:‚Äô checks if a window (without any suffix or with the ‚Äòw‚Äô suffix) or a session (with the ‚Äòs‚Äô suffix) name exists, for example ‚Äò`N/w:foo`‚Äô is replaced with 1 if a window named ‚Äòfoo‚Äô exists.

       A prefix of the form ‚Äòs/foo/bar/:‚Äô will substitute ‚Äòfoo‚Äô with ‚Äòbar‚Äô throughout.  The first argument may be an extended regular expression and a final argument may be ‚Äòi‚Äô to ignore case, for example ‚Äòs/a(.)/\1x/i:‚Äô would change
       ‚ÄòabABab‚Äô into ‚ÄòbxBxbx‚Äô.  A different delimiter character may also be used, to avoid collisions with literal slashes in the pattern.  For example, ‚Äòs|foo/|bar/|:‚Äô will substitute ‚Äòfoo/‚Äô with ‚Äòbar/‚Äô throughout.

       In  addition,  the  last line of a shell command's output may be inserted using ‚Äò#()‚Äô.  For example, ‚Äò#(uptime)‚Äô will insert the system's uptime.  When constructing formats, [1mtmux [22mdoes not wait for ‚Äò#()‚Äô commands to finish; in‚Äê
       stead, the previous result from running the same command is used, or a placeholder if the command has not been run before.  If the command hasn't exited, the most recent line of output will be used, but the  status  line  will
       not be updated more than once a second.  Commands are executed using [4m/bin/sh[24m and with the [1mtmux [22mglobal environment set (see the ‚ÄúGLOBAL AND SESSION ENVIRONMENT‚Äù section).

       An ‚Äòl‚Äô specifies that a string should be interpreted literally and not expanded.  For example ‚Äò#{l:#{?pane_in_mode,yes,no}}‚Äô will be replaced by ‚Äò#{?pane_in_mode,yes,no}‚Äô.

       The following variables are available, where appropriate:

       [1mVariable name          Alias    Replaced with[0m
       [1mactive_window_index             [22mIndex of active window in session
       [1malternate_on                    [22m1 if pane is in alternate screen
       [1malternate_saved_x               [22mSaved cursor X in alternate screen
       [1malternate_saved_y               [22mSaved cursor Y in alternate screen
       [1mbuffer_created                  [22mTime buffer created
       [1mbuffer_name                     [22mName of buffer
       [1mbuffer_sample                   [22mSample of start of buffer
       [1mbuffer_size                     [22mSize of the specified buffer in bytes
       [1mclient_activity                 [22mTime client last had activity
       [1mclient_cell_height              [22mHeight of each client cell in pixels
       [1mclient_cell_width               [22mWidth of each client cell in pixels
       [1mclient_control_mode             [22m1 if client is in control mode
       [1mclient_created                  [22mTime client created
       [1mclient_discarded                [22mBytes discarded when client behind
       [1mclient_flags                    [22mList of client flags
       [1mclient_height                   [22mHeight of client
       [1mclient_key_table                [22mCurrent key table
       [1mclient_last_session             [22mName of the client's last session
       [1mclient_name                     [22mName of client
       [1mclient_pid                      [22mPID of client process
       [1mclient_prefix                   [22m1 if prefix key has been pressed
       [1mclient_readonly                 [22m1 if client is read-only
       [1mclient_session                  [22mName of the client's session
       [1mclient_termfeatures             [22mTerminal features of client, if any
       [1mclient_termname                 [22mTerminal name of client
       [1mclient_termtype                 [22mTerminal type of client, if available
       [1mclient_tty                      [22mPseudo terminal of client
       [1mclient_uid                      [22mUID of client process
       [1mclient_user                     [22mUser of client process
       [1mclient_utf8                     [22m1 if client supports UTF-8
       [1mclient_width                    [22mWidth of client
       [1mclient_written                  [22mBytes written to client
       [1mcommand                         [22mName of command in use, if any
       [1mcommand_list_alias              [22mCommand alias if listing commands
       [1mcommand_list_name               [22mCommand name if listing commands
       [1mcommand_list_usage              [22mCommand usage if listing commands
       [1mconfig_files                    [22mList of configuration files loaded
       [1mcopy_cursor_line                [22mLine the cursor is on in copy mode
       [1mcopy_cursor_word                [22mWord under cursor in copy mode
       [1mcopy_cursor_x                   [22mCursor X position in copy mode
       [1mcopy_cursor_y                   [22mCursor Y position in copy mode
       [1mcurrent_file                    [22mCurrent configuration file
       [1mcursor_character                [22mCharacter at cursor in pane
       [1mcursor_flag                     [22mPane cursor flag
       [1mcursor_x                        [22mCursor X position in pane
       [1mcursor_y                        [22mCursor Y position in pane
       [1mhistory_bytes                   [22mNumber of bytes in window history
       [1mhistory_limit                   [22mMaximum window history lines
       [1mhistory_size                    [22mSize of history in lines
       [1mhook                            [22mName of running hook, if any
       [1mhook_client                     [22mName of client where hook was run, if any
       [1mhook_pane                       [22mID of pane where hook was run, if any
       [1mhook_session                    [22mID of session where hook was run, if any
       [1mhook_session_name               [22mName of session where hook was run, if any
       [1mhook_window                     [22mID of window where hook was run, if any
       [1mhook_window_name                [22mName of window where hook was run, if any
       [1mhost                   [22m#H       Hostname of local host
       [1mhost_short             [22m#h       Hostname of local host (no domain name)
       [1minsert_flag                     [22mPane insert flag
       [1mkeypad_cursor_flag              [22mPane keypad cursor flag
       [1mkeypad_flag                     [22mPane keypad flag
       [1mlast_window_index               [22mIndex of last window in session
       [1mline                            [22mLine number in the list
       [1mmouse_all_flag                  [22mPane mouse all flag
       [1mmouse_any_flag                  [22mPane mouse any flag
       [1mmouse_button_flag               [22mPane mouse button flag
       [1mmouse_hyperlink                 [22mHyperlink under mouse, if any
       [1mmouse_line                      [22mLine under mouse, if any
       [1mmouse_sgr_flag                  [22mPane mouse SGR flag
       [1mmouse_standard_flag             [22mPane mouse standard flag
       [1mmouse_status_line               [22mStatus line on which mouse event took place
       [1mmouse_status_range              [22mRange type or argument of mouse event on status line
       [1mmouse_utf8_flag                 [22mPane mouse UTF-8 flag
       [1mmouse_word                      [22mWord under mouse, if any
       [1mmouse_x                         [22mMouse X position, if any
       [1mmouse_y                         [22mMouse Y position, if any
       [1mnext_session_id                 [22mUnique session ID for next new session
       [1morigin_flag                     [22mPane origin flag
       [1mpane_active                     [22m1 if active pane
       [1mpane_at_bottom                  [22m1 if pane is at the bottom of window
       [1mpane_at_left                    [22m1 if pane is at the left of window
       [1mpane_at_right                   [22m1 if pane is at the right of window
       [1mpane_at_top                     [22m1 if pane is at the top of window
       [1mpane_bg                         [22mPane background colour
       [1mpane_bottom                     [22mBottom of pane
       [1mpane_current_command            [22mCurrent command if available
       [1mpane_current_path               [22mCurrent path if available
       [1mpane_dead                       [22m1 if pane is dead
       [1mpane_dead_signal                [22mExit signal of process in dead pane
       [1mpane_dead_status                [22mExit status of process in dead pane
       [1mpane_dead_time                  [22mExit time of process in dead pane
       [1mpane_fg                         [22mPane foreground colour
       [1mpane_format                     [22m1 if format is for a pane
       [1mpane_height                     [22mHeight of pane
       [1mpane_id                [22m#D       Unique pane ID
       [1mpane_in_mode                    [22m1 if pane is in a mode
       [1mpane_index             [22m#P       Index of pane
       [1mpane_input_off                  [22m1 if input to pane is disabled
       [1mpane_last                       [22m1 if last pane
       [1mpane_left                       [22mLeft of pane
       [1mpane_marked                     [22m1 if this is the marked pane
       [1mpane_marked_set                 [22m1 if a marked pane is set
       [1mpane_mode                       [22mName of pane mode, if any
       [1mpane_path                       [22mPath of pane (can be set by application)
       [1mpane_pid                        [22mPID of first process in pane
       [1mpane_pipe                       [22m1 if pane is being piped
       [1mpane_right                      [22mRight of pane
       [1mpane_search_string              [22mLast search string in copy mode
       [1mpane_start_command              [22mCommand pane started with
       [1mpane_start_path                 [22mPath pane started with
       [1mpane_synchronized               [22m1 if pane is synchronized
       [1mpane_tabs                       [22mPane tab positions
       [1mpane_title             [22m#T       Title of pane (can be set by application)
       [1mpane_top                        [22mTop of pane
       [1mpane_tty                        [22mPseudo terminal of pane
       [1mpane_unseen_changes             [22m1 if there were changes in pane while in mode
       [1mpane_width                      [22mWidth of pane
       [1mpid                             [22mServer PID
       [1mrectangle_toggle                [22m1 if rectangle selection is activated
       [1mscroll_position                 [22mScroll position in copy mode
       [1mscroll_region_lower             [22mBottom of scroll region in pane
       [1mscroll_region_upper             [22mTop of scroll region in pane
       [1msearch_match                    [22mSearch match if any
       [1msearch_present                  [22m1 if search started in copy mode
       [1mselection_active                [22m1 if selection started and changes with the cursor in copy mode
       [1mselection_end_x                 [22mX position of the end of the selection
       [1mselection_end_y                 [22mY position of the end of the selection
       [1mselection_present               [22m1 if selection started in copy mode
       [1mselection_start_x               [22mX position of the start of the selection
       [1mselection_start_y               [22mY position of the start of the selection
       [1mserver_sessions                 [22mNumber of sessions
       [1msession_activity                [22mTime of session last activity
       [1msession_alerts                  [22mList of window indexes with alerts
       [1msession_attached                [22mNumber of clients session is attached to
       [1msession_attached_list           [22mList of clients session is attached to
       [1msession_created                 [22mTime session created
       [1msession_format                  [22m1 if format is for a session
       [1msession_group                   [22mName of session group
       [1msession_group_attached          [22mNumber of clients sessions in group are attached to
       [1msession_group_attached_list     [22mList of clients sessions in group are attached to
       [1msession_group_list              [22mList of sessions in group
       [1msession_group_many_attached     [22m1 if multiple clients attached to sessions in group
       [1msession_group_size              [22mSize of session group
       [1msession_grouped                 [22m1 if session in a group
       [1msession_id                      [22mUnique session ID
       [1msession_last_attached           [22mTime session last attached
       [1msession_many_attached           [22m1 if multiple clients attached
       [1msession_marked                  [22m1 if this session contains the marked pane
       [1msession_name           [22m#S       Name of session
       [1msession_path                    [22mWorking directory of session
       [1msession_stack                   [22mWindow indexes in most recent order
       [1msession_windows                 [22mNumber of windows in session
       [1msocket_path                     [22mServer socket path
       [1mstart_time                      [22mServer start time
       [1muid                             [22mServer UID
       [1muser                            [22mServer user
       [1mversion                         [22mServer version
       [1mwindow_active                   [22m1 if window active
       [1mwindow_active_clients           [22mNumber of clients viewing this window
       [1mwindow_active_clients_list      [22mList of clients viewing this window
       [1mwindow_active_sessions          [22mNumber of sessions on which this window is active
       [1mwindow_active_sessions_list     [22mList of sessions on which this window is active
       [1mwindow_activity                 [22mTime of window last activity
       [1mwindow_activity_flag            [22m1 if window has activity
       [1mwindow_bell_flag                [22m1 if window has bell
       [1mwindow_bigger                   [22m1 if window is larger than client
       [1mwindow_cell_height              [22mHeight of each cell in pixels
       [1mwindow_cell_width               [22mWidth of each cell in pixels
       [1mwindow_end_flag                 [22m1 if window has the highest index
       [1mwindow_flags           [22m#F       Window flags with # escaped as ##
       [1mwindow_format                   [22m1 if format is for a window
       [1mwindow_height                   [22mHeight of window
       [1mwindow_id                       [22mUnique window ID
       [1mwindow_index           [22m#I       Index of window
       [1mwindow_last_flag                [22m1 if window is the last used
       [1mwindow_layout                   [22mWindow layout description, ignoring zoomed window panes
       [1mwindow_linked                   [22m1 if window is linked across sessions
       [1mwindow_linked_sessions          [22mNumber of sessions this window is linked to
       [1mwindow_linked_sessions_list     [22mList of sessions this window is linked to
       [1mwindow_marked_flag              [22m1 if window contains the marked pane
       [1mwindow_name            [22m#W       Name of window
       [1mwindow_offset_x                 [22mX offset into window if larger than client
       [1mwindow_offset_y                 [22mY offset into window if larger than client
       [1mwindow_panes                    [22mNumber of panes in window
       [1mwindow_raw_flags                [22mWindow flags with nothing escaped
       [1mwindow_silence_flag             [22m1 if window has silence alert
       [1mwindow_stack_index              [22mIndex in session most recent stack
       [1mwindow_start_flag               [22m1 if window has the lowest index
       [1mwindow_visible_layout           [22mWindow layout description, respecting zoomed window panes
       [1mwindow_width                    [22mWidth of window
       [1mwindow_zoomed_flag              [22m1 if window is zoomed
       [1mwrap_flag                       [22mPane wrap flag

[1mSTYLES[0m
       [1mtmux [22moffers various options to specify the colour and attributes of aspects of the interface, for example [1mstatus-style [22mfor the status line.  In addition, embedded styles may be specified in format options, such as [1mstatus-left[22m,
       by enclosing them in ‚Äò#[‚Äô and ‚Äò]‚Äô.

       A style may be the single term ‚Äòdefault‚Äô to specify the default style (which may come from an option, for example [1mstatus-style [22min the status line) or a space or comma separated list of the following:

       [1mfg=colour[0m
               Set  the  foreground colour.  The colour is one of: [1mblack[22m, [1mred[22m, [1mgreen[22m, [1myellow[22m, [1mblue[22m, [1mmagenta[22m, [1mcyan[22m, [1mwhite[22m; if supported the bright variants [1mbrightred[22m, [1mbrightgreen[22m, [1mbrightyellow[22m; [1mcolour0 [22mto [1mcolour255 [22mfrom the 256-colour
               set; [1mdefault [22mfor the default colour; [1mterminal [22mfor the terminal default colour; or a hexadecimal RGB string such as ‚Äò#ffffff‚Äô.

       [1mbg=colour[0m
               Set the background colour.

       [1mus=colour[0m
               Set the underscore colour.

       [1mnone    [22mSet no attributes (turn off any active attributes).

       [1macs[22m, [1mbright [22m(or [1mbold[22m), [1mdim[22m, [1munderscore[22m, [1mblink[22m, [1mreverse[22m, [1mhidden[22m, [1mitalics[22m, [1moverline[22m, [1mstrikethrough[22m, [1mdouble-underscore[22m, [1mcurly-underscore[22m, [1mdotted-underscore[22m, [1mdashed-underscore[0m
               Set an attribute.  Any of the attributes may be prefixed with ‚Äòno‚Äô to unset.  [1macs [22mis the terminal alternate character set.

       [1malign=left [22m(or [1mnoalign[22m), [1malign=centre[22m, [1malign=right[0m
               Align text to the left, centre or right of the available space if appropriate.

       [1mfill=colour[0m
               Fill the available space with a background colour if appropriate.

       [1mlist=on[22m, [1mlist=focus[22m, [1mlist=left-marker[22m, [1mlist=right-marker[22m, [1mnolist[0m
               Mark the position of the various window list components in the [1mstatus-format [22moption: [1mlist=on [22mmarks the start of the list; [1mlist=focus [22mis the part of the list that should be kept in focus if the entire list won't fit  in
               the available space (typically the current window); [1mlist=left-marker [22mand [1mlist=right-marker [22mmark the text to be used to mark that text has been trimmed from the left or right of the list if there is not enough space.

       [1mpush-default[22m, [1mpop-default[0m
               Store  the  current  colours  and  attributes  as  the default or reset to the previous default.  A [1mpush-default [22maffects any subsequent use of the [1mdefault [22mterm until a [1mpop-default[22m.  Only one default may be pushed (each
               [1mpush-default [22mreplaces the previous saved default).

       [1mrange=left[22m, [1mrange=right[22m, [1mrange=session|X[22m, [1mrange=window|X[22m, [1mrange=pane|X[22m, [1mrange=user|X[22m, [1mnorange[0m
               Mark a range for mouse events in the [1mstatus-format [22moption.  When a mouse event occurs in the [1mrange=left [22mor [1mrange=right [22mrange, the ‚ÄòStatusLeft‚Äô and ‚ÄòStatusRight‚Äô key bindings are triggered.

               [1mrange=session|X[22m, [1mrange=window|X [22mand [1mrange=pane|X [22mare ranges for a session, window or pane.  These trigger the ‚ÄòStatus‚Äô mouse key with the target session, window or pane given by the ‚ÄòX‚Äô argument.  ‚ÄòX‚Äô is a session  ID,
               window index in the current session or a pane ID.  For these, the [1mmouse_status_range [22mformat variable will be set to ‚Äòsession‚Äô, ‚Äòwindow‚Äô or ‚Äòpane‚Äô.

               [1mrange=user|X [22mis a user-defined range; it triggers the ‚ÄòStatus‚Äô mouse key.  The argument ‚ÄòX‚Äô will be available in the [1mmouse_status_range [22mformat variable.  ‚ÄòX‚Äô must be at most 15 bytes in length.

       Examples are:

             fg=yellow bold underscore blink
             bg=black,fg=default,noreverse

[1mNAMES AND TITLES[0m
       [1mtmux  [22mdistinguishes  between names and titles.  Windows and sessions have names, which may be used to specify them in targets and are displayed in the status line and various lists: the name is the [1mtmux [22midentifier for a window
       or session.  Only panes have titles.  A pane's title is typically set by the program running inside the pane using an escape sequence (like it would set the [4mxterm[24m(1) window title in [4mX[24m(7)).  Windows themselves do not  have  ti‚Äê
       tles - a window's title is the title of its active pane.  [1mtmux [22mitself may set the title of the terminal in which the client is running, see the [1mset-titles [22moption.

       A session's name is set with the [1mnew-session [22mand [1mrename-session [22mcommands.  A window's name is set with one of:

       1.      A command argument (such as [1m-n [22mfor [1mnew-window [22mor [1mnew-session[22m).

       2.      An escape sequence (if the [1mallow-rename [22moption is turned on):

                     $ printf '\033kWINDOW_NAME\033\\'

       3.      Automatic renaming, which sets the name to the active command in the window's active pane.  See the [1mautomatic-rename [22moption.

       When a pane is first created, its title is the hostname.  A pane's title can be set via the title setting escape sequence, for example:

             $ printf '\033]2;My Title\033\\'

       It can also be modified with the [1mselect-pane -T [22mcommand.

[1mGLOBAL AND SESSION ENVIRONMENT[0m
       When  the  server is started, [1mtmux [22mcopies the environment into the [4mglobal[24m [4menvironment[24m; in addition, each session has a [4msession[24m [4menvironment[24m.  When a window is created, the session and global environments are merged.  If a vari‚Äê
       able exists in both, the value from the session environment is used.  The result is the initial environment passed to the new process.

       The [1mupdate-environment [22msession option may be used to update the session environment from the client when a new session is created or an old reattached.  [1mtmux [22malso initialises the TMUX variable with some internal information to
       allow commands to be executed from inside, and the TERM variable with the correct terminal setting of ‚Äòscreen‚Äô.

       Variables in both session and global environments may be marked as hidden.  Hidden variables are not passed into the environment of new processes and instead can only be used by tmux itself (for example  in  formats,  see  the
       ‚ÄúFORMATS‚Äù section).

       Commands to alter and view the environment are:

       [1mset-environment [22m[[1m-Fhgru[22m] [[1m-t [4m[22mtarget-session[24m] [4mname[24m [[4mvalue[24m]
                     (alias: [1msetenv[22m)
               Set or unset an environment variable.  If [1m-g [22mis used, the change is made in the global environment; otherwise, it is applied to the session environment for [4mtarget-session[24m.  If [1m-F [22mis present, then [4mvalue[24m is expanded as a
               format.  The [1m-u [22mflag unsets a variable.  [1m-r [22mindicates the variable is to be removed from the environment before starting a new process.  [1m-h [22mmarks the variable as hidden.

       [1mshow-environment [22m[[1m-hgs[22m] [[1m-t [4m[22mtarget-session[24m] [[4mvariable[24m]
                     (alias: [1mshowenv[22m)
               Display  the environment for [4mtarget-session[24m or the global environment with [1m-g[22m.  If [4mvariable[24m is omitted, all variables are shown.  Variables removed from the environment are prefixed with ‚Äò-‚Äô.  If [1m-s [22mis used, the output
               is formatted as a set of Bourne shell commands.  [1m-h [22mshows hidden variables (omitted by default).

[1mSTATUS LINE[0m
       [1mtmux [22mincludes an optional status line which is displayed in the bottom line of each terminal.

       By default, the status line is enabled and one line in height (it may be disabled or made multiple lines with the [1mstatus [22msession option) and contains, from left-to-right: the name of the current session in square brackets; the
       window list; the title of the active pane in double quotes; and the time and date.

       Each line of the status line is configured with the [1mstatus-format [22moption.  The default is made of three parts: configurable left and right sections (which may contain dynamic content such as the time or  output  from  a  shell
       command,  see the [1mstatus-left[22m, [1mstatus-left-length[22m, [1mstatus-right[22m, and [1mstatus-right-length [22moptions below), and a central window list.  By default, the window list shows the index, name and (if any) flag of the windows present in
       the current session in ascending numerical order.  It may be customised with the [4mwindow-status-format[24m and [4mwindow-status-current-format[24m options.  The flag is one of the following symbols appended to the window name:

             [1mSymbol    Meaning[0m
             [1m*         [22mDenotes the current window.
             [1m-         [22mMarks the last window (previously selected).
             [1m#         [22mWindow activity is monitored and activity has been detected.
             [1m!         [22mWindow bells are monitored and a bell has occurred in the window.
             [1m~         [22mThe window has been silent for the monitor-silence interval.
             [1mM         [22mThe window contains the marked pane.
             [1mZ         [22mThe window's active pane is zoomed.

       The # symbol relates to the [1mmonitor-activity [22mwindow option.  The window name is printed in inverted colours if an alert (bell, activity or silence) is present.

       The colour and attributes of the status line may be configured, the entire status line using the [1mstatus-style [22msession option and individual windows using the [1mwindow-status-style [22mwindow option.

       The status line is automatically refreshed at interval if it has changed, the interval may be controlled with the [1mstatus-interval [22msession option.

       Commands related to the status line are as follows:

       [1mclear-prompt-history [22m[[1m-T [4m[22mprompt-type[24m]
                     (alias: [1mclearphist[22m)
               Clear status prompt history for prompt type [4mprompt-type[24m.  If [1m-T [22mis omitted, then clear history for all types.  See [1mcommand-prompt [22mfor possible values for [4mprompt-type[24m.

       [1mcommand-prompt [22m[[1m-1bFikN[22m] [[1m-I [4m[22minputs[24m] [[1m-p [4m[22mprompts[24m] [[1m-t [4m[22mtarget-client[24m] [[1m-T [4m[22mprompt-type[24m] [[4mtemplate[24m]
               Open the command prompt in a client.  This may be used from inside [1mtmux [22mto execute commands interactively.

               If [4mtemplate[24m is specified, it is used as the command.  With [1m-F[22m, [4mtemplate[24m is expanded as a format.

               If present, [1m-I [22mis a comma-separated list of the initial text for each prompt.  If [1m-p [22mis given, [4mprompts[24m is a comma-separated list of prompts which are displayed in order; otherwise a single  prompt  is  displayed,  con‚Äê
               structed from [4mtemplate[24m if it is present, or ‚Äò:‚Äô if not.

               Before the command is executed, the first occurrence of the string ‚Äò%%‚Äô and all occurrences of ‚Äò%1‚Äô are replaced by the response to the first prompt, all ‚Äò%2‚Äô are replaced with the response to the second prompt, and so
               on for further prompts.  Up to nine prompt responses may be replaced (‚Äò%1‚Äô to ‚Äò%9‚Äô).  ‚Äò%%%‚Äô is like ‚Äò%%‚Äô but any quotation marks are escaped.

               [1m-1 [22mmakes the prompt only accept one key press, in this case the resulting input is a single character.  [1m-k [22mis like [1m-1 [22mbut the key press is translated to a key name.  [1m-N [22mmakes the prompt only accept numeric key presses.
               [1m-i [22mexecutes the command every time the prompt input changes instead of when the user exits the command prompt.

               [1m-T [22mtells [1mtmux [22mthe prompt type.  This affects what completions are offered when [4mTab[24m is pressed.  Available types are: ‚Äòcommand‚Äô, ‚Äòsearch‚Äô, ‚Äòtarget‚Äô and ‚Äòwindow-target‚Äô.

               The following keys have a special meaning in the command prompt, depending on the value of the [1mstatus-keys [22moption:

                     [1mFunction                             vi        emacs[0m
                     [1mCancel command prompt                [22mq         Escape
                     [1mDelete from cursor to start of word            [22mC-w
                     [1mDelete entire command                [22md         C-u
                     [1mDelete from cursor to end            [22mD         C-k
                     [1mExecute command                      [22mEnter     Enter
                     [1mGet next command from history                  [22mDown
                     [1mGet previous command from history              [22mUp
                     [1mInsert top paste buffer              [22mp         C-y
                     [1mLook for completions                 [22mTab       Tab
                     [1mMove cursor left                     [22mh         Left
                     [1mMove cursor right                    [22ml         Right
                     [1mMove cursor to end                   [22m$         C-e
                     [1mMove cursor to next word             [22mw         M-f
                     [1mMove cursor to previous word         [22mb         M-b
                     [1mMove cursor to start                 [22m0         C-a
                     [1mTranspose characters                           [22mC-t

               With [1m-b[22m, the prompt is shown in the background and the invoking client does not exit until it is dismissed.

       [1mconfirm-before [22m[[1m-by[22m] [[1m-c [4m[22mconfirm-key[24m] [[1m-p [4m[22mprompt[24m] [[1m-t [4m[22mtarget-client[24m] [4mcommand[0m
                     (alias: [1mconfirm[22m)
               Ask  for  confirmation  before  executing  [4mcommand[24m.   If  [1m-p  [22mis  given, [4mprompt[24m is the prompt to display; otherwise a prompt is constructed from [4mcommand[24m.  It may contain the special character sequences supported by the
               [1mstatus-left [22moption.  With [1m-b[22m, the prompt is shown in the background and the invoking client does not exit until it is dismissed.  [1m-y [22mchanges the default behaviour (if Enter alone is pressed) of the prompt  to  run  the
               command.  [1m-c [22mchanges the confirmation key to [4mconfirm-key[24m; the default is ‚Äòy‚Äô.

       [1mdisplay-menu [22m[[1m-O[22m] [[1m-b [4m[22mborder-lines[24m] [[1m-c [4m[22mtarget-client[24m] [[1m-C [4m[22mstarting-choice[24m] [[1m-H [4m[22mselected-style[24m] [[1m-s [4m[22mstyle[24m] [[1m-S [4m[22mborder-style[24m] [[1m-t [4m[22mtarget-pane[24m] [[1m-T [4m[22mtitle[24m] [[1m-x [4m[22mposition[24m] [[1m-y [4m[22mposition[24m] [4mname[24m [4mkey[24m [4mcommand[24m [[4margument[24m [4m...[24m]
                     (alias: [1mmenu[22m)
               Display a menu on [4mtarget-client[24m.  [4mtarget-pane[24m gives the target for any commands run from the menu.

               A  menu  is  passed  as a series of arguments: first the menu item name, second the key shortcut (or empty for none) and third the command to run when the menu item is chosen.  The name and command are formats, see the
               ‚ÄúFORMATS‚Äù and ‚ÄúSTYLES‚Äù sections.  If the name begins with a hyphen (-), then the item is disabled (shown dim) and may not be chosen.  The name may be empty for a separator line, in which case both the key  and  command
               should be omitted.

               [1m-b [22msets the type of characters used for drawing menu borders.  See [1mpopup-border-lines [22mfor possible values for [4mborder-lines[24m.

               [1m-H [22msets the style for the selected menu item (see ‚ÄúSTYLES‚Äù).

               [1m-s [22msets the style for the menu and [1m-S [22msets the style for the menu border (see ‚ÄúSTYLES‚Äù).

               [1m-T [22mis a format for the menu title (see ‚ÄúFORMATS‚Äù).

               [1m-C [22msets the menu item selected by default, if the menu is not bound to a mouse key binding.

               [1m-x [22mand [1m-y [22mgive the position of the menu.  Both may be a row or column number, or one of the following special values:

                     [1mValue    Flag    Meaning[0m
                     [1mC        [22mBoth    The centre of the terminal
                     [1mR        -x      [22mThe right side of the terminal
                     [1mP        [22mBoth    The bottom left of the pane
                     [1mM        [22mBoth    The mouse position
                     [1mW        [22mBoth    The window position on the status line
                     [1mS        -y      [22mThe line above or below the status line

               Or a format, which is expanded including the following additional variables:

                     [1mVariable name                 Replaced with[0m
                     [1mpopup_centre_x                [22mCentered in the client
                     [1mpopup_centre_y                [22mCentered in the client
                     [1mpopup_height                  [22mHeight of menu or popup
                     [1mpopup_mouse_bottom            [22mBottom of at the mouse
                     [1mpopup_mouse_centre_x          [22mHorizontal centre at the mouse
                     [1mpopup_mouse_centre_y          [22mVertical centre at the mouse
                     [1mpopup_mouse_top               [22mTop at the mouse
                     [1mpopup_mouse_x                 [22mMouse X position
                     [1mpopup_mouse_y                 [22mMouse Y position
                     [1mpopup_pane_bottom             [22mBottom of the pane
                     [1mpopup_pane_left               [22mLeft of the pane
                     [1mpopup_pane_right              [22mRight of the pane
                     [1mpopup_pane_top                [22mTop of the pane
                     [1mpopup_status_line_y           [22mAbove or below the status line
                     [1mpopup_width                   [22mWidth of menu or popup
                     [1mpopup_window_status_line_x    [22mAt the window position in status line
                     [1mpopup_window_status_line_y    [22mAt the status line showing the window

               Each  menu consists of items followed by a key shortcut shown in brackets.  If the menu is too large to fit on the terminal, it is not displayed.  Pressing the key shortcut chooses the corresponding item.  If the mouse
               is enabled and the menu is opened from a mouse key binding, releasing the mouse button with an item selected chooses that item and releasing the mouse button without an item selected closes the menu.  [1m-O  [22mchanges  this
               behaviour so that the menu does not close when the mouse button is released without an item selected the menu is not closed and a mouse button must be clicked to choose an item.

               The following keys are also available:

                     [1mKey    Function[0m
                     [1mEnter  [22mChoose selected item
                     [1mUp     [22mSelect previous item
                     [1mDown   [22mSelect next item
                     [1mq      [22mExit menu

       [1mdisplay-message [22m[[1m-aIlNpv[22m] [[1m-c [4m[22mtarget-client[24m] [[1m-d [4m[22mdelay[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mmessage[24m]
                     (alias: [1mdisplay[22m)
               Display  a  message.  If [1m-p [22mis given, the output is printed to stdout, otherwise it is displayed in the [4mtarget-client[24m status line for up to [4mdelay[24m milliseconds.  If [4mdelay[24m is not given, the [1mdisplay-time [22moption is used; a
               delay of zero waits for a key press.  ‚ÄòN‚Äô ignores key presses and closes only after the delay expires.  If [1m-l [22mis given, [4mmessage[24m is printed unchanged.  Otherwise, the format of [4mmessage[24m is described in the ‚ÄúFORMATS‚Äù sec‚Äê
               tion; information is taken from [4mtarget-pane[24m if [1m-t [22mis given, otherwise the active pane.

               [1m-v [22mprints verbose logging as the format is parsed and [1m-a [22mlists the format variables and their values.

               [1m-I [22mforwards any input read from stdin to the empty pane given by [4mtarget-pane[24m.

       [1mdisplay-popup [22m[[1m-BCE[22m] [[1m-b [4m[22mborder-lines[24m] [[1m-c [4m[22mtarget-client[24m] [[1m-d [4m[22mstart-directory[24m] [[1m-e [4m[22menvironment[24m] [[1m-h [4m[22mheight[24m] [[1m-s [4m[22mborder-style[24m] [[1m-S [4m[22mstyle[24m] [[1m-t [4m[22mtarget-pane[24m] [[1m-T [4m[22mtitle[24m] [[1m-w [4m[22mwidth[24m] [[1m-x [4m[22mposition[24m] [[1m-y [4m[22mposition[24m] [[4mshell-command[24m]
                     (alias: [1mpopup[22m)
               Display a popup running [4mshell-command[24m on [4mtarget-client[24m.  A popup is a rectangular box drawn over the top of any panes.  Panes are not updated while a popup is present.

               [1m-E [22mcloses the popup automatically when [4mshell-command[24m exits.  Two [1m-E [22mcloses the popup only if [4mshell-command[24m exited with success.

               [1m-x [22mand [1m-y [22mgive the position of the popup, they have the same meaning as for the [1mdisplay-menu [22mcommand.  [1m-w [22mand [1m-h [22mgive the width and height - both may be a percentage (followed by ‚Äò%‚Äô).  If omitted, half of the terminal
               size is used.

               [1m-B [22mdoes not surround the popup by a border.

               [1m-b [22msets the type of characters used for drawing popup borders.  When [1m-B [22mis specified, the [1m-b [22moption is ignored.  See [1mpopup-border-lines [22mfor possible values for [4mborder-lines[24m.

               [1m-s [22msets the style for the popup and [1m-S [22msets the style for the popup border (see ‚ÄúSTYLES‚Äù).

               [1m-e [22mtakes the form ‚ÄòVARIABLE=value‚Äô and sets an environment variable for the popup; it may be specified multiple times.

               [1m-T [22mis a format for the popup title (see ‚ÄúFORMATS‚Äù).

               The [1m-C [22mflag closes any popup on the client.

       [1mshow-prompt-history [22m[[1m-T [4m[22mprompt-type[24m]
                     (alias: [1mshowphist[22m)
               Display status prompt history for prompt type [4mprompt-type[24m.  If [1m-T [22mis omitted, then show history for all types.  See [1mcommand-prompt [22mfor possible values for [4mprompt-type[24m.

[1mBUFFERS[0m
       [1mtmux [22mmaintains a set of named [4mpaste[24m [4mbuffers[24m.  Each buffer may be either explicitly or automatically named.  Explicitly named buffers are named when created with the [1mset-buffer [22mor [1mload-buffer [22mcommands, or by renaming  an  auto‚Äê
       matically named buffer with [1mset-buffer -n[22m.  Automatically named buffers are given a name such as ‚Äòbuffer0001‚Äô, ‚Äòbuffer0002‚Äô and so on.  When the [1mbuffer-limit [22moption is reached, the oldest automatically named buffer is deleted.
       Explicitly named buffers are not subject to [1mbuffer-limit [22mand may be deleted with the [1mdelete-buffer [22mcommand.

       Buffers  may  be added using [1mcopy-mode [22mor the [1mset-buffer [22mand [1mload-buffer [22mcommands, and pasted into a window using the [1mpaste-buffer [22mcommand.  If a buffer command is used and no buffer is specified, the most recently added auto‚Äê
       matically named buffer is assumed.

       A configurable history buffer is also maintained for each window.  By default, up to 2000 lines are kept; this can be altered with the [1mhistory-limit [22moption (see the [1mset-option [22mcommand above).

       The buffer commands are as follows:

       [1mchoose-buffer [22m[[1m-NZr[22m] [[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m] [[1m-K [4m[22mkey-format[24m] [[1m-O [4m[22msort-order[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mtemplate[24m]
               Put a pane into buffer mode, where a buffer may be chosen interactively from a list.  Each buffer is shown on one line.  A shortcut key is shown on the left in brackets allowing for immediate choice, or the list may be
               navigated and an item chosen or otherwise manipulated using the keys below.  [1m-Z [22mzooms the pane.  The following keys may be used in buffer mode:

                     [1mKey    Function[0m
                     [1mEnter  [22mPaste selected buffer
                     [1mUp     [22mSelect previous buffer
                     [1mDown   [22mSelect next buffer
                     [1mC-s    [22mSearch by name or content
                     [1mn      [22mRepeat last search
                     [1mt      [22mToggle if buffer is tagged
                     [1mT      [22mTag no buffers
                     [1mC-t    [22mTag all buffers
                     [1mp      [22mPaste selected buffer
                     [1mP      [22mPaste tagged buffers
                     [1md      [22mDelete selected buffer
                     [1mD      [22mDelete tagged buffers
                     [1me      [22mOpen the buffer in an editor
                     [1mf      [22mEnter a format to filter items
                     [1mO      [22mChange sort field
                     [1mr      [22mReverse sort order
                     [1mv      [22mToggle preview
                     [1mq      [22mExit mode

               After a buffer is chosen, ‚Äò%%‚Äô is replaced by the buffer name in [4mtemplate[24m and the result executed as a command.  If [4mtemplate[24m is not given, "paste-buffer -b '%%'" is used.

               [1m-O [22mspecifies the initial sort field: one of ‚Äòtime‚Äô (creation), ‚Äòname‚Äô or ‚Äòsize‚Äô.  [1m-r [22mreverses the sort order.  [1m-f [22mspecifies an initial filter: the filter is a format - if it evaluates to zero, the item in the  list  is
               not  shown,  otherwise  it  is  shown.  If a filter would lead to an empty list, it is ignored.  [1m-F [22mspecifies the format for each item in the list and [1m-K [22ma format for each shortcut key; both are evaluated once for each
               line.  [1m-N [22mstarts without the preview.  This command works only if at least one client is attached.

       [1mclear-history [22m[[1m-H[22m] [[1m-t [4m[22mtarget-pane[24m]
                     (alias: [1mclearhist[22m)
               Remove and free the history for the specified pane.  [1m-H [22malso removes all hyperlinks.

       [1mdelete-buffer [22m[[1m-b [4m[22mbuffer-name[24m]
                     (alias: [1mdeleteb[22m)
               Delete the buffer named [4mbuffer-name[24m, or the most recently added automatically named buffer if not specified.

       [1mlist-buffers [22m[[1m-F [4m[22mformat[24m] [[1m-f [4m[22mfilter[24m]
                     (alias: [1mlsb[22m)
               List the global buffers.  [1m-F [22mspecifies the format of each line and [1m-f [22ma filter.  Only buffers for which the filter is true are shown.  See the ‚ÄúFORMATS‚Äù section.

       [1mload-buffer [22m[[1m-w[22m] [[1m-b [4m[22mbuffer-name[24m] [[1m-t [4m[22mtarget-client[24m] [4mpath[0m
                     (alias: [1mloadb[22m)
               Load the contents of the specified paste buffer from [4mpath[24m.  If [1m-w [22mis given, the buffer is also sent to the clipboard for [4mtarget-client[24m using the [4mxterm[24m(1) escape sequence, if possible.

       [1mpaste-buffer [22m[[1m-dpr[22m] [[1m-b [4m[22mbuffer-name[24m] [[1m-s [4m[22mseparator[24m] [[1m-t [4m[22mtarget-pane[24m]
                     (alias: [1mpasteb[22m)
               Insert the contents of a paste buffer into the specified pane.  If not specified, paste into the current one.  With [1m-d[22m, also delete the paste buffer.  When output, any linefeed (LF) characters in the paste  buffer  are
               replaced  with a separator, by default carriage return (CR).  A custom separator may be specified using the [1m-s [22mflag.  The [1m-r [22mflag means to do no replacement (equivalent to a separator of LF).  If [1m-p [22mis specified, paste
               bracket control codes are inserted around the buffer if the application has requested bracketed paste mode.

       [1msave-buffer [22m[[1m-a[22m] [[1m-b [4m[22mbuffer-name[24m] [4mpath[0m
                     (alias: [1msaveb[22m)
               Save the contents of the specified paste buffer to [4mpath[24m.  The [1m-a [22moption appends to rather than overwriting the file.

       [1mset-buffer [22m[[1m-aw[22m] [[1m-b [4m[22mbuffer-name[24m] [[1m-t [4m[22mtarget-client[24m] [[1m-n [4m[22mnew-buffer-name[24m] [4mdata[0m
                     (alias: [1msetb[22m)
               Set the contents of the specified buffer to [4mdata[24m.  If [1m-w [22mis given, the buffer is also sent to the clipboard for [4mtarget-client[24m using the [4mxterm[24m(1) escape sequence, if possible.  The [1m-a [22moption appends to rather than over‚Äê
               writing the buffer.  The [1m-n [22moption renames the buffer to [4mnew-buffer-name[24m.

       [1mshow-buffer [22m[[1m-b [4m[22mbuffer-name[24m]
                     (alias: [1mshowb[22m)
               Display the contents of the specified buffer.

[1mMISCELLANEOUS[0m
       Miscellaneous commands are as follows:

       [1mclock-mode [22m[[1m-t [4m[22mtarget-pane[24m]
               Display a large clock.

       [1mif-shell [22m[[1m-bF[22m] [[1m-t [4m[22mtarget-pane[24m] [4mshell-command[24m [4mcommand[24m [[4mcommand[24m]
                     (alias: [1mif[22m)
               Execute the first [4mcommand[24m if [4mshell-command[24m (run with [4m/bin/sh[24m) returns success or the second [4mcommand[24m otherwise.  Before being executed, [4mshell-command[24m is expanded using the rules specified in the ‚ÄúFORMATS‚Äù  section,  in‚Äê
               cluding those relevant to [4mtarget-pane[24m.  With [1m-b[22m, [4mshell-command[24m is run in the background.

               If [1m-F [22mis given, [4mshell-command[24m is not executed but considered success if neither empty nor zero (after formats are expanded).

       [1mlock-server[0m
                     (alias: [1mlock[22m)
               Lock each client individually by running the command specified by the [1mlock-command [22moption.

       [1mrun-shell [22m[[1m-bC[22m] [[1m-c [4m[22mstart-directory[24m] [[1m-d [4m[22mdelay[24m] [[1m-t [4m[22mtarget-pane[24m] [[4mshell-command[24m]
                     (alias: [1mrun[22m)
               Execute  [4mshell-command[24m  using [4m/bin/sh[24m or (with [1m-C[22m) a [1mtmux [22mcommand in the background without creating a window.  Before being executed, [4mshell-command[24m is expanded using the rules specified in the ‚ÄúFORMATS‚Äù section.  With
               [1m-b[22m, the command is run in the background.  [1m-d [22mwaits for [4mdelay[24m seconds before starting the command.  If [1m-c [22mis given, the current working directory is set to [4mstart-directory[24m.  If [1m-C [22mis not given, any output to stdout  is
               displayed in view mode (in the pane specified by [1m-t [22mor the current pane if omitted) after the command finishes.  If the command fails, the exit status is also displayed.

       [1mwait-for [22m[[1m-L [22m| [1m-S [22m| [1m-U[22m] [4mchannel[0m
                     (alias: [1mwait[22m)
               When  used  without  options,  prevents the client from exiting until woken using [1mwait-for -S [22mwith the same channel.  When [1m-L [22mis used, the channel is locked and any clients that try to lock the same channel are made to
               wait until the channel is unlocked with [1mwait-for -U[22m.

[1mEXIT MESSAGES[0m
       When a [1mtmux [22mclient detaches, it prints a message.  This may be one of:

       detached (from session ...)
               The client was detached normally.

       detached and SIGHUP
               The client was detached and its parent sent the SIGHUP signal (for example with [1mdetach-client -P[22m).

       lost tty
               The client's [4mtty[24m(4) or [4mpty[24m(4) was unexpectedly destroyed.

       terminated
               The client was killed with SIGTERM.

       too far behind
               The client is in control mode and became unable to keep up with the data from [1mtmux[22m.

       exited  The server exited when it had no sessions.

       server exited
               The server exited when it received SIGTERM.

       server exited unexpectedly
               The server crashed or otherwise exited without telling the client the reason.

[1mTERMINFO EXTENSIONS[0m
       [1mtmux [22munderstands some unofficial extensions to [4mterminfo[24m(5).  It is not normally necessary to set these manually, instead the [1mterminal-features [22moption should be used.

       [4mAX[24m      An existing extension that tells [1mtmux [22mthe terminal supports default colours.

       [4mBidi[24m    Tell [1mtmux [22mthat the terminal supports the VTE bidirectional text extensions.

       [4mCs[24m, [4mCr[24m  Set the cursor colour.  The first takes a single string argument and is used to set the colour; the second takes no arguments and restores the default cursor colour.  If set, a sequence such as  this  may  be  used  to
               change the cursor colour from inside [1mtmux[22m:

                     $ printf '\033]12;red\033\\'

               The colour is an [4mX[24m(7) colour, see [4mXParseColor[24m(3).

       [4mCmg,[24m [4mClmg,[24m [4mDsmg[24m, [4mEnmg[0m
               Set, clear, disable or enable DECSLRM margins.  These are set automatically if the terminal reports it is [4mVT420[24m compatible.

       [4mDsbp[24m, [4mEnbp[0m
               Disable and enable bracketed paste.  These are set automatically if the [4mXT[24m capability is present.

       [4mDseks[24m, [4mEneks[0m
               Disable and enable extended keys.

       [4mDsfcs[24m, [4mEnfcs[0m
               Disable and enable focus reporting.  These are set automatically if the [4mXT[24m capability is present.

       [4mHls[24m     Set or clear a hyperlink annotation.

       [4mNobr[24m    Tell [1mtmux [22mthat the terminal does not use bright colors for bold display.

       [4mRect[24m    Tell [1mtmux [22mthat the terminal supports rectangle operations.

       [4mSmol[24m    Enable the overline attribute.

       [4mSmulx[24m   Set a styled underscore.  The single parameter is one of: 0 for no underscore, 1 for normal underscore, 2 for double underscore, 3 for curly underscore, 4 for dotted underscore and 5 for dashed underscore.

       [4mSetulc[24m, [4mSetulc1,[24m [4mol[0m
               Set the underscore colour or reset to the default.  [4mSetulc[24m is for RGB colours and [4mSetulc1[24m for ANSI or 256 colours.  The [4mSetulc[24m argument is (red * 65536) + (green * 256) + blue where each is between 0 and 255.

       [4mSs[24m, [4mSe[24m  Set or reset the cursor style.  If set, a sequence such as this may be used to change the cursor to an underline:

                     $ printf '\033[4 q'

               If [4mSe[24m is not set, Ss with argument 0 will be used to reset the cursor style instead.

       [4mSwd[24m     Set the opening sequence for the working directory notification.  The sequence is terminated using the standard [4mfsl[24m capability.

       [4mSxl[24m     Indicates that the terminal supports SIXEL.

       [4mSync[24m    Start (parameter is 1) or end (parameter is 2) a synchronized update.

       [4mTc[24m      Indicate that the terminal supports the ‚Äòdirect colour‚Äô RGB escape sequence (for example, \e[38;2;255;255;255m).

               If supported, this is used for the initialize colour escape sequence (which may be enabled by adding the ‚Äòinitc‚Äô and ‚Äòccc‚Äô capabilities to the [1mtmux [4m[22mterminfo[24m(5) entry).

               This is equivalent to the [4mRGB[24m [4mterminfo[24m(5) capability.

       [4mMs[24m      Store the current buffer in the host terminal's selection (clipboard).  See the [4mset-clipboard[24m option above and the [4mxterm[24m(1) man page.

       [4mXT[24m      This is an existing extension capability that tmux uses to mean that the terminal supports the [4mxterm[24m(1) title set sequences and to automatically set some of the capabilities above.

[1mCONTROL MODE[0m
       [1mtmux [22moffers a textual interface called [4mcontrol[24m [4mmode[24m.  This allows applications to communicate with [1mtmux [22musing a simple text-only protocol.

       In  control  mode,  a client sends [1mtmux [22mcommands or command sequences terminated by newlines on standard input.  Each command will produce one block of output on standard output.  An output block consists of a [4m%begin[24m line fol‚Äê
       lowed by the output (which may be empty).  The output block ends with a [4m%end[24m or [4m%error[24m.  [4m%begin[24m and matching [4m%end[24m or [4m%error[24m have three arguments: an integer time (as seconds from epoch), command number and flags (currently not
       used).  For example:

             %begin 1363006971 2 1
             0: ksh* (1 panes) [80x24] [layout b25f,80x24,0,0,2] @2 (active)
             %end 1363006971 2 1

       The [1mrefresh-client -C [22mcommand may be used to set the size of a client in control mode.

       In control mode, [1mtmux [22moutputs notifications.  A notification will never occur inside an output block.

       The following notifications are defined:

       [1m%client-detached [4m[22mclient[0m
               The client has detached.

       [1m%client-session-changed [4m[22mclient[24m [4msession-id[24m [4mname[0m
               The client is now attached to the session with ID [4msession-id[24m, which is named [4mname[24m.

       [1m%config-error [4m[22merror[0m
               An error has happened in a configuration file.

       [1m%continue [4m[22mpane-id[0m
               The pane has been continued after being paused (if the [4mpause-after[24m flag is set, see [1mrefresh-client -A[22m).

       [1m%exit [22m[[4mreason[24m]
               The [1mtmux [22mclient is exiting immediately, either because it is not attached to any session or an error occurred.  If present, [4mreason[24m describes why the client exited.

       [1m%extended-output [4m[22mpane-id[24m [4mage[24m [4m...[24m : [4mvalue[0m
               New form of [1m%output [22msent when the [4mpause-after[24m flag is set.  [4mage[24m is the time in milliseconds for which tmux had buffered the output before it was sent.  Any subsequent arguments up until a single ‚Äò:‚Äô are for future  use
               and should be ignored.

       [1m%layout-change [4m[22mwindow-id[24m [4mwindow-layout[24m [4mwindow-visible-layout[24m [4mwindow-flags[0m
               The layout of a window with ID [4mwindow-id[24m changed.  The new layout is [4mwindow-layout[24m.  The window's visible layout is [4mwindow-visible-layout[24m and the window flags are [4mwindow-flags[24m.

       [1m%message [4m[22mmessage[0m
               A message sent with the [1mdisplay-message [22mcommand.

       [1m%output [4m[22mpane-id[24m [4mvalue[0m
               A window pane produced output.  [4mvalue[24m escapes non-printable characters and backslash as octal \xxx.

       [1m%pane-mode-changed [4m[22mpane-id[0m
               The pane with ID [4mpane-id[24m has changed mode.

       [1m%paste-buffer-changed [4m[22mname[0m
               Paste buffer [4mname[24m has been changed.

       [1m%paste-buffer-deleted [4m[22mname[0m
               Paste buffer [4mname[24m has been deleted.

       [1m%pause [4m[22mpane-id[0m
               The pane has been paused (if the [4mpause-after[24m flag is set).

       [1m%session-changed [4m[22msession-id[24m [4mname[0m
               The client is now attached to the session with ID [4msession-id[24m, which is named [4mname[24m.

       [1m%session-renamed [4m[22mname[0m
               The current session was renamed to [4mname[24m.

       [1m%session-window-changed [4m[22msession-id[24m [4mwindow-id[0m
               The session with ID [4msession-id[24m changed its active window to the window with ID [4mwindow-id[24m.

       [1m%sessions-changed[0m
               A session was created or destroyed.

       [1m%subscription-changed [4m[22mname[24m [4msession-id[24m [4mwindow-id[24m [4mwindow-index[24m [4mpane-id[24m [4m...[24m : [4mvalue[0m
               The value of the format associated with subscription [4mname[24m has changed to [4mvalue[24m.  See [1mrefresh-client -B[22m.  Any arguments after [4mpane-id[24m up until a single ‚Äò:‚Äô are for future use and should be ignored.

       [1m%unlinked-window-add [4m[22mwindow-id[0m
               The window with ID [4mwindow-id[24m was created but is not linked to the current session.

       [1m%unlinked-window-close [4m[22mwindow-id[0m
               The window with ID [4mwindow-id[24m, which is not linked to the current session, was closed.

       [1m%unlinked-window-renamed [4m[22mwindow-id[0m
               The window with ID [4mwindow-id[24m, which is not linked to the current session, was renamed.

       [1m%window-add [4m[22mwindow-id[0m
               The window with ID [4mwindow-id[24m was linked to the current session.

       [1m%window-close [4m[22mwindow-id[0m
               The window with ID [4mwindow-id[24m closed.

       [1m%window-pane-changed [4m[22mwindow-id[24m [4mpane-id[0m
               The active pane in the window with ID [4mwindow-id[24m changed to the pane with ID [4mpane-id[24m.

       [1m%window-renamed [4m[22mwindow-id[24m [4mname[0m
               The window with ID [4mwindow-id[24m was renamed to [4mname[24m.

[1mENVIRONMENT[0m
       When [1mtmux [22mis started, it inspects the following environment variables:

       EDITOR    If the command specified in this variable contains the string ‚Äòvi‚Äô and VISUAL is unset, use vi-style key bindings.  Overridden by the [1mmode-keys [22mand [1mstatus-keys [22moptions.

       HOME      The user's login directory.  If unset, the [4mpasswd[24m(5) database is consulted.

       LC_CTYPE  The  character encoding [4mlocale[24m(1).  It is used for two separate purposes.  For output to the terminal, UTF-8 is used if the [1m-u [22moption is given or if LC_CTYPE contains "UTF-8" or "UTF8".  Otherwise, only ASCII charac‚Äê
                 ters are written and non-ASCII characters are replaced with underscores (‚Äò_‚Äô).  For input, [1mtmux [22malways runs with a UTF-8 locale.  If en_US.UTF-8 is provided by the operating system, it is used and LC_CTYPE is ignored
                 for input.  Otherwise, LC_CTYPE tells [1mtmux [22mwhat the UTF-8 locale is called on the current system.  If the locale specified by LC_CTYPE is not available or is not a UTF-8 locale, [1mtmux [22mexits with an error message.

       LC_TIME   The date and time format [4mlocale[24m(1).  It is used for locale-dependent [4mstrftime[24m(3) format specifiers.

       PWD       The current working directory to be set in the global environment.  This may be useful if it contains symbolic links.  If the value of the variable does not match the current working directory, the  variable  is  ig‚Äê
                 nored and the result of [4mgetcwd[24m(3) is used instead.

       SHELL     The absolute path to the default shell for new windows.  See the [1mdefault-shell [22moption for details.

       TMUX_TMPDIR
                 The parent directory of the directory containing the server sockets.  See the [1m-L [22moption for details.

       VISUAL    If the command specified in this variable contains the string ‚Äòvi‚Äô, use vi-style key bindings.  Overridden by the [1mmode-keys [22mand [1mstatus-keys [22moptions.

[1mFILES[0m
       [4m~/.tmux.conf[0m
       [4m$XDG_CONFIG_HOME/tmux/tmux.conf[0m
       [4m~/.config/tmux/tmux.conf[0m
                          Default [1mtmux [22mconfiguration file.
       [4m/etc/tmux.conf[24m     System-wide configuration file.

[1mEXAMPLES[0m
       To create a new [1mtmux [22msession running [4mvi[24m(1):

             [1m$ tmux new-session vi[0m

       Most commands have a shorter form, known as an alias.  For new-session, this is [1mnew[22m:

             [1m$ tmux new vi[0m

       Alternatively, the shortest unambiguous form of a command is accepted.  If there are several options, they are listed:

             $ tmux n
             ambiguous command: n, could be: new-session, new-window, next-window

       Within an active session, a new window may be created by typing ‚ÄòC-b c‚Äô (Ctrl followed by the ‚Äòb‚Äô key followed by the ‚Äòc‚Äô key).

       Windows may be navigated with: ‚ÄòC-b 0‚Äô (to select window 0), ‚ÄòC-b 1‚Äô (to select window 1), and so on; ‚ÄòC-b n‚Äô to select the next window; and ‚ÄòC-b p‚Äô to select the previous window.

       A session may be detached using ‚ÄòC-b d‚Äô (or by an external event such as [4mssh[24m(1) disconnection) and reattached with:

             [1m$ tmux attach-session[0m

       Typing ‚ÄòC-b ?‚Äô lists the current key bindings in the current window; up and down may be used to navigate the list or ‚Äòq‚Äô to exit from it.

       Commands to be run when the [1mtmux [22mserver is started may be placed in the [4m~/.tmux.conf[24m configuration file.  Common examples include:

       Changing the default prefix key:

             set-option -g prefix C-a
             unbind-key C-b
             bind-key C-a send-prefix

       Turning the status line off, or changing its colour:

             set-option -g status off
             set-option -g status-style bg=blue

       Setting other options, such as the default command, or locking after 30 minutes of inactivity:

             set-option -g default-command "exec /bin/ksh"
             set-option -g lock-after-time 1800

       Creating new key bindings:

             bind-key b set-option status
             bind-key / command-prompt "split-window 'exec man %%'"
             bind-key S command-prompt "new-window -n %1 'ssh %1'"

[1mSEE ALSO[0m
       [4mpty[24m(4)

[1mAUTHORS[0m
       Nicholas Marriott <[4mnicholas.marriott@gmail.com[24m>

Debian                                                                                                          $Mdocdate$                                                                                                        [4mTMUX[24m(1)
